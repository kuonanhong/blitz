# Makefile.in generated by automake 1.6.2 from Makefile.am.
# @configure_input@

# Copyright 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002
# Free Software Foundation, Inc.
# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.

@SET_MAKE@

#
# Written by Patrick Guio <patrick.guio@fys.uio.no>
#
SHELL = @SHELL@

srcdir = @srcdir@
top_srcdir = @top_srcdir@
VPATH = @srcdir@
prefix = @prefix@
exec_prefix = @exec_prefix@

bindir = @bindir@
sbindir = @sbindir@
libexecdir = @libexecdir@
datadir = @datadir@
sysconfdir = @sysconfdir@
sharedstatedir = @sharedstatedir@
localstatedir = @localstatedir@
libdir = @libdir@
infodir = @infodir@
mandir = @mandir@
includedir = @includedir@
oldincludedir = /usr/include
pkgdatadir = $(datadir)/@PACKAGE@
pkglibdir = $(libdir)/@PACKAGE@
pkgincludedir = $(includedir)/@PACKAGE@
top_builddir = ..

ACLOCAL = @ACLOCAL@
AUTOCONF = @AUTOCONF@
AUTOMAKE = @AUTOMAKE@
AUTOHEADER = @AUTOHEADER@

am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
INSTALL = @INSTALL@
INSTALL_PROGRAM = @INSTALL_PROGRAM@
INSTALL_DATA = @INSTALL_DATA@
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_SCRIPT = @INSTALL_SCRIPT@
INSTALL_HEADER = $(INSTALL_DATA)
transform = @program_transform_name@
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :

EXEEXT = @EXEEXT@
OBJEXT = @OBJEXT@
PATH_SEPARATOR = @PATH_SEPARATOR@
AMTAR = @AMTAR@
AR = @AR@
AR_FLAGS = @AR_FLAGS@
AWK = @AWK@
BLASLIB = @BLASLIB@
CC = @CC@
CPP = @CPP@
CXX = @CXX@
CXXF90FLAG = @CXXF90FLAG@
CXXFFLAGS = @CXXFFLAGS@
CXXFLAGS = @CXXFLAGS@
CXX_DEBUG_FLAGS = @CXX_DEBUG_FLAGS@
CXX_LIBS = @CXX_LIBS@
CXX_OPTIMIZE_FLAGS = @CXX_OPTIMIZE_FLAGS@
DEPDIR = @DEPDIR@
F77 = @F77@
F77_OPTIMIZE_FLAGS = @F77_OPTIMIZE_FLAGS@
F90 = @F90@
F90_OPTIMIZE_FLAGS = @F90_OPTIMIZE_FLAGS@
FFLAGS = @FFLAGS@
FORTLIBS = @FORTLIBS@
INSTALL_STRIP_PROGRAM = @INSTALL_STRIP_PROGRAM@
LDFLAGS = @LDFLAGS@
MAINT = @MAINT@
PACKAGE = @PACKAGE@
RANLIB = @RANLIB@
STRIP = @STRIP@
VERSION = @VERSION@
am__include = @am__include@
am__quote = @am__quote@
install_sh = @install_sh@

EXTRA_DIST = arrdaxpy.cpp arrdaxpy.m arrdaxpy2.m arrdaxpyf.f arrexpr1.cpp \
arrexpr1.m cfd.cpp cfdf.f cfortran.h chunky.cpp compiletime.cpp \
ctime-results ctime1.cpp ctime1v.cpp ctime2.cpp ctime2v.cpp ctime3.cpp \
ctime3v.cpp ctime4.cpp ctime4v.cpp ctime5.cpp ctime5c.cpp ctime5v.cpp \
daxpy2.cpp daxpyf90-2.f90 dot.cpp dot2.cpp echof2-back.f echotune.cpp \
echotune.m echotunef.f frek.m hao-he-mark.cpp kepler.cpp loop1-bug.cpp \
loop4.cpp loop4f.f loop4f90.f90 loopstruct.cpp looptest.cpp makelogo.cpp \
makeloops.cpp qcd.txt quinlan.cpp stenciln.cpp tiny3.cpp


AM_CXXFLAGS = -I$(top_srcdir) @CXXF90FLAG@ @CXXFLAGS@ @CXX_OPTIMIZE_FLAGS@ \
	@CXXFFLAGS@ 


F77FLAGS = @F77_OPTIMIZE_FLAGS@
F77COMPILE = $(F77) $(AM_FFLAGS) $(FFLAGS) $(F77FLAGS)
LIBS = -L$(top_srcdir)/lib -lblitz -lm @BLASLIB@ @FORTLIBS@ @CXX_LIBS@

@F90_COMPILER_TRUE@F90FLAGS = @F90_OPTIMIZE_FLAGS@

@F90_COMPILER_TRUE@F90COMPILE = $(F90) $(AM_FFLAGS) $(FFLAGS) $(F90FLAGS)

# install these files
benchmarkdir = $(prefix)/benchmarks
benchmark_DATA = acou3d.cpp acou3db1.cpp acou3db2.cpp acou3db3.cpp \
acou3db4.cpp acou3df.f acou3df2.f acou3df90.f90 acou3df902.f90 acoustic.cpp \
acousticf.f acousticf2.f acousticf90.f90 acousticf902.f90 arrdaxpy.cpp \
arrdaxpy.m arrdaxpy2.m arrdaxpyf.f arrexpr1.cpp arrexpr1.m cfd.cpp cfdf.f \
chunky.cpp compiletime.cpp ctime1.cpp ctime1v.cpp ctime2.cpp \
ctime2v.cpp ctime3.cpp ctime3v.cpp ctime4.cpp ctime4v.cpp ctime5.cpp \
ctime5c.cpp ctime5v.cpp daxpy.cpp daxpy2.cpp daxpyf90-2.f90 daxpyf90.f90 \
dot.cpp dot2.cpp echof2-back.f echotune.cpp echotune.m echotunef.f fdaxpy.f \
fidaxpy.f frek.m haney.cpp haneyf.f hao-he-mark.cpp hao-he.cpp kepler.cpp \
loop1-bug.cpp loop1.cpp loop10.cpp loop10f.f loop10f90.f90 loop11.cpp \
loop11f.f loop11f90.f90 loop12.cpp loop12f.f loop12f90.f90 loop13.cpp \
loop13f.f loop13f90.f90 loop14.cpp loop14f.f loop14f90.f90 loop15.cpp \
loop15f.f loop15f90.f90 loop16.cpp loop16f.f loop16f90.f90 loop17.cpp \
loop17f.f loop17f90.f90 loop18.cpp loop18f.f loop18f90.f90 loop19.cpp \
loop19f.f loop19f90.f90 loop1f.f loop1f90.f90 loop2.cpp loop21.cpp loop21f.f \
loop21f90.f90 loop22.cpp loop22f.f loop22f90.f90 loop23.cpp loop23f.f \
loop23f90.f90 loop24.cpp loop24f.f loop24f90.f90 loop25.cpp loop25f.f \
loop25f90.f90 loop2f.f loop2f90.f90 loop3.cpp loop36.cpp loop36f.f \
loop36f90.f90 loop3f.f loop3f90.f90 loop4.cpp loop4f.f loop4f90.f90 \
loop5.cpp loop5f.f loop5f90.f90 loop6.cpp loop6f.f loop6f90.f90 loop8.cpp \
loop8f.f loop8f90.f90 loop9.cpp loop9f.f loop9f90.f90 loopstruct.cpp \
looptest.cpp makelogo.cpp makeloops.cpp qcd.cpp qcdf.f quinlan.cpp \
stencil.cpp stencilf.f stencilf2.f stencilf90.f90 stenciln.cpp tiny3.cpp \
tinydaxpy.cpp



############################################################################
LOOP_KERNELS = loop1 loop2 loop3 loop5 loop6 loop8 loop9 loop10 loop11 \
loop12 loop13 loop14 loop15 loop16 loop17 loop18 loop19 loop21 loop22 \
loop23 loop24 loop25 loop36


OTHER_BENCH = daxpy haney qcd stencil tinydaxpy acoustic acou3d hao-he

BENCHMARKS = $(LOOP_KERNELS) $(OTHER_BENCH)

COMPILE_TIME_BENCHMARKS = ctime1 ctime2 ctime3 ctime4 ctime5 ctime1v \
ctime2v ctime3v ctime4v ctime5v


EXTRA_PROGRAMS = $(BENCHMARKS)


############################################################################
@F90_COMPILER_TRUE@haney_SOURCES = haney.cpp haneyf.f
@F90_COMPILER_FALSE@haney_SOURCES = haney.cpp haneyf.f
@F90_COMPILER_TRUE@daxpy_SOURCES = daxpy.cpp fdaxpy.f fidaxpy.f daxpyf90.f90
@F90_COMPILER_FALSE@daxpy_SOURCES = daxpy.cpp fdaxpy.f fidaxpy.f
@F90_COMPILER_TRUE@qcd_SOURCES = qcd.cpp qcdf.f
@F90_COMPILER_FALSE@qcd_SOURCES = qcd.cpp qcdf.f
@F90_COMPILER_TRUE@stencil_SOURCES = stencil.cpp stencilf.f stencilf2.f stencilf90.f90
@F90_COMPILER_FALSE@stencil_SOURCES = stencil.cpp stencilf.f stencilf2.f
@F90_COMPILER_TRUE@acoustic_SOURCES = acoustic.cpp acousticf.f acousticf2.f acousticf90.f90 \
@F90_COMPILER_TRUE@acousticf902.f90

@F90_COMPILER_FALSE@acoustic_SOURCES = acoustic.cpp acousticf.f acousticf2.f
@F90_COMPILER_TRUE@acou3d_SOURCES = acou3db1.cpp acou3db2.cpp acou3db3.cpp acou3db4.cpp \
@F90_COMPILER_TRUE@acou3d.cpp acou3df90.f90 acou3df.f acou3df2.f acou3df902.f90

@F90_COMPILER_FALSE@acou3d_SOURCES = acou3db1.cpp acou3db2.cpp acou3db3.cpp acou3db4.cpp \
@F90_COMPILER_FALSE@acou3d.cpp acou3df.f acou3df2.f 

@F90_COMPILER_TRUE@tinydaxpy_SOURCES = tinydaxpy.cpp
@F90_COMPILER_FALSE@tinydaxpy_SOURCES = tinydaxpy.cpp
@F90_COMPILER_TRUE@hao_he_SOURCES = hao-he.cpp
@F90_COMPILER_FALSE@hao_he_SOURCES = hao-he.cpp


# Loop kernel tests
#
# Note: The loop numbers skip around because they represent
# selected loops from a suite used by IBM researchers to test
# the RS/6000.  Missing loops are ones which were too complicated
# to generate automatically.
#
# This section generated by makeloops.cpp
@F90_COMPILER_TRUE@loop1_SOURCES = loop1.cpp loop1f.f loop1f90.f90
@F90_COMPILER_FALSE@loop1_SOURCES = loop1.cpp loop1f.f
@F90_COMPILER_TRUE@loop2_SOURCES = loop2.cpp loop2f.f loop2f90.f90
@F90_COMPILER_FALSE@loop2_SOURCES = loop2.cpp loop2f.f
@F90_COMPILER_TRUE@loop3_SOURCES = loop3.cpp loop3f.f loop3f90.f90
@F90_COMPILER_FALSE@loop3_SOURCES = loop3.cpp loop3f.f
@F90_COMPILER_TRUE@loop5_SOURCES = loop5.cpp loop5f.f loop5f90.f90
@F90_COMPILER_FALSE@loop5_SOURCES = loop5.cpp loop5f.f
@F90_COMPILER_TRUE@loop6_SOURCES = loop6.cpp loop6f.f loop6f90.f90
@F90_COMPILER_FALSE@loop6_SOURCES = loop6.cpp loop6f.f
@F90_COMPILER_TRUE@loop8_SOURCES = loop8.cpp loop8f.f loop8f90.f90
@F90_COMPILER_FALSE@loop8_SOURCES = loop8.cpp loop8f.f
@F90_COMPILER_TRUE@loop9_SOURCES = loop9.cpp loop9f.f loop9f90.f90
@F90_COMPILER_FALSE@loop9_SOURCES = loop9.cpp loop9f.f
@F90_COMPILER_TRUE@loop10_SOURCES = loop10.cpp loop10f.f loop10f90.f90
@F90_COMPILER_FALSE@loop10_SOURCES = loop10.cpp loop10f.f
@F90_COMPILER_TRUE@loop11_SOURCES = loop11.cpp loop11f.f loop11f90.f90
@F90_COMPILER_FALSE@loop11_SOURCES = loop11.cpp loop11f.f
@F90_COMPILER_TRUE@loop12_SOURCES = loop12.cpp loop12f.f loop12f90.f90
@F90_COMPILER_FALSE@loop12_SOURCES = loop12.cpp loop12f.f
@F90_COMPILER_TRUE@loop13_SOURCES = loop13.cpp loop13f.f loop13f90.f90
@F90_COMPILER_FALSE@loop13_SOURCES = loop13.cpp loop13f.f
@F90_COMPILER_TRUE@loop14_SOURCES = loop14.cpp loop14f.f loop14f90.f90
@F90_COMPILER_FALSE@loop14_SOURCES = loop14.cpp loop14f.f
@F90_COMPILER_TRUE@loop15_SOURCES = loop15.cpp loop15f.f loop15f90.f90
@F90_COMPILER_FALSE@loop15_SOURCES = loop15.cpp loop15f.f
@F90_COMPILER_TRUE@loop16_SOURCES = loop16.cpp loop16f.f loop16f90.f90
@F90_COMPILER_FALSE@loop16_SOURCES = loop16.cpp loop16f.f
@F90_COMPILER_TRUE@loop17_SOURCES = loop17.cpp loop17f.f loop17f90.f90
@F90_COMPILER_FALSE@loop17_SOURCES = loop17.cpp loop17f.f
@F90_COMPILER_TRUE@loop18_SOURCES = loop18.cpp loop18f.f loop18f90.f90
@F90_COMPILER_FALSE@loop18_SOURCES = loop18.cpp loop18f.f
@F90_COMPILER_TRUE@loop19_SOURCES = loop19.cpp loop19f.f loop19f90.f90
@F90_COMPILER_FALSE@loop19_SOURCES = loop19.cpp loop19f.f
@F90_COMPILER_TRUE@loop21_SOURCES = loop21.cpp loop21f.f loop21f90.f90
@F90_COMPILER_FALSE@loop21_SOURCES = loop21.cpp loop21f.f
@F90_COMPILER_TRUE@loop22_SOURCES = loop22.cpp loop22f.f loop22f90.f90
@F90_COMPILER_FALSE@loop22_SOURCES = loop22.cpp loop22f.f
@F90_COMPILER_TRUE@loop23_SOURCES = loop23.cpp loop23f.f loop23f90.f90
@F90_COMPILER_FALSE@loop23_SOURCES = loop23.cpp loop23f.f
@F90_COMPILER_TRUE@loop24_SOURCES = loop24.cpp loop24f.f loop24f90.f90
@F90_COMPILER_FALSE@loop24_SOURCES = loop24.cpp loop24f.f
@F90_COMPILER_TRUE@loop25_SOURCES = loop25.cpp loop25f.f loop25f90.f90
@F90_COMPILER_FALSE@loop25_SOURCES = loop25.cpp loop25f.f
@F90_COMPILER_TRUE@loop36_SOURCES = loop36.cpp loop36f.f loop36f90.f90
@F90_COMPILER_FALSE@loop36_SOURCES = loop36.cpp loop36f.f
subdir = benchmarks
mkinstalldirs = $(SHELL) $(top_srcdir)/mkinstalldirs
CONFIG_CLEAN_FILES = plot_benchmarks.m
EXTRA_PROGRAMS = loop1$(EXEEXT) loop2$(EXEEXT) loop3$(EXEEXT) \
	loop5$(EXEEXT) loop6$(EXEEXT) loop8$(EXEEXT) loop9$(EXEEXT) \
	loop10$(EXEEXT) loop11$(EXEEXT) loop12$(EXEEXT) loop13$(EXEEXT) \
	loop14$(EXEEXT) loop15$(EXEEXT) loop16$(EXEEXT) loop17$(EXEEXT) \
	loop18$(EXEEXT) loop19$(EXEEXT) loop21$(EXEEXT) loop22$(EXEEXT) \
	loop23$(EXEEXT) loop24$(EXEEXT) loop25$(EXEEXT) loop36$(EXEEXT) \
	daxpy$(EXEEXT) haney$(EXEEXT) qcd$(EXEEXT) stencil$(EXEEXT) \
	tinydaxpy$(EXEEXT) acoustic$(EXEEXT) acou3d$(EXEEXT) \
	hao-he$(EXEEXT)
@F90_COMPILER_TRUE@am_acou3d_OBJECTS = acou3db1.$(OBJEXT) \
@F90_COMPILER_TRUE@	acou3db2.$(OBJEXT) acou3db3.$(OBJEXT) \
@F90_COMPILER_TRUE@	acou3db4.$(OBJEXT) acou3d.$(OBJEXT) \
@F90_COMPILER_TRUE@	acou3df90.$(OBJEXT) acou3df.$(OBJEXT) \
@F90_COMPILER_TRUE@	acou3df2.$(OBJEXT) acou3df902.$(OBJEXT)
@F90_COMPILER_FALSE@am_acou3d_OBJECTS = acou3db1.$(OBJEXT) \
@F90_COMPILER_FALSE@	acou3db2.$(OBJEXT) acou3db3.$(OBJEXT) \
@F90_COMPILER_FALSE@	acou3db4.$(OBJEXT) acou3d.$(OBJEXT) \
@F90_COMPILER_FALSE@	acou3df.$(OBJEXT) acou3df2.$(OBJEXT)
acou3d_OBJECTS = $(am_acou3d_OBJECTS)
acou3d_LDADD = $(LDADD)
acou3d_DEPENDENCIES =
acou3d_LDFLAGS =
@F90_COMPILER_TRUE@am_acoustic_OBJECTS = acoustic.$(OBJEXT) \
@F90_COMPILER_TRUE@	acousticf.$(OBJEXT) acousticf2.$(OBJEXT) \
@F90_COMPILER_TRUE@	acousticf90.$(OBJEXT) acousticf902.$(OBJEXT)
@F90_COMPILER_FALSE@am_acoustic_OBJECTS = acoustic.$(OBJEXT) \
@F90_COMPILER_FALSE@	acousticf.$(OBJEXT) acousticf2.$(OBJEXT)
acoustic_OBJECTS = $(am_acoustic_OBJECTS)
acoustic_LDADD = $(LDADD)
acoustic_DEPENDENCIES =
acoustic_LDFLAGS =
@F90_COMPILER_TRUE@am_daxpy_OBJECTS = daxpy.$(OBJEXT) fdaxpy.$(OBJEXT) \
@F90_COMPILER_TRUE@	fidaxpy.$(OBJEXT) daxpyf90.$(OBJEXT)
@F90_COMPILER_FALSE@am_daxpy_OBJECTS = daxpy.$(OBJEXT) fdaxpy.$(OBJEXT) \
@F90_COMPILER_FALSE@	fidaxpy.$(OBJEXT)
daxpy_OBJECTS = $(am_daxpy_OBJECTS)
daxpy_LDADD = $(LDADD)
daxpy_DEPENDENCIES =
daxpy_LDFLAGS =
@F90_COMPILER_TRUE@am_haney_OBJECTS = haney.$(OBJEXT) haneyf.$(OBJEXT)
@F90_COMPILER_FALSE@am_haney_OBJECTS = haney.$(OBJEXT) haneyf.$(OBJEXT)
haney_OBJECTS = $(am_haney_OBJECTS)
haney_LDADD = $(LDADD)
haney_DEPENDENCIES =
haney_LDFLAGS =
@F90_COMPILER_TRUE@am_hao_he_OBJECTS = hao-he.$(OBJEXT)
@F90_COMPILER_FALSE@am_hao_he_OBJECTS = hao-he.$(OBJEXT)
hao_he_OBJECTS = $(am_hao_he_OBJECTS)
hao_he_LDADD = $(LDADD)
hao_he_DEPENDENCIES =
hao_he_LDFLAGS =
@F90_COMPILER_TRUE@am_loop1_OBJECTS = loop1.$(OBJEXT) loop1f.$(OBJEXT) \
@F90_COMPILER_TRUE@	loop1f90.$(OBJEXT)
@F90_COMPILER_FALSE@am_loop1_OBJECTS = loop1.$(OBJEXT) loop1f.$(OBJEXT)
loop1_OBJECTS = $(am_loop1_OBJECTS)
loop1_LDADD = $(LDADD)
loop1_DEPENDENCIES =
loop1_LDFLAGS =
@F90_COMPILER_TRUE@am_loop10_OBJECTS = loop10.$(OBJEXT) \
@F90_COMPILER_TRUE@	loop10f.$(OBJEXT) loop10f90.$(OBJEXT)
@F90_COMPILER_FALSE@am_loop10_OBJECTS = loop10.$(OBJEXT) \
@F90_COMPILER_FALSE@	loop10f.$(OBJEXT)
loop10_OBJECTS = $(am_loop10_OBJECTS)
loop10_LDADD = $(LDADD)
loop10_DEPENDENCIES =
loop10_LDFLAGS =
@F90_COMPILER_TRUE@am_loop11_OBJECTS = loop11.$(OBJEXT) \
@F90_COMPILER_TRUE@	loop11f.$(OBJEXT) loop11f90.$(OBJEXT)
@F90_COMPILER_FALSE@am_loop11_OBJECTS = loop11.$(OBJEXT) \
@F90_COMPILER_FALSE@	loop11f.$(OBJEXT)
loop11_OBJECTS = $(am_loop11_OBJECTS)
loop11_LDADD = $(LDADD)
loop11_DEPENDENCIES =
loop11_LDFLAGS =
@F90_COMPILER_TRUE@am_loop12_OBJECTS = loop12.$(OBJEXT) \
@F90_COMPILER_TRUE@	loop12f.$(OBJEXT) loop12f90.$(OBJEXT)
@F90_COMPILER_FALSE@am_loop12_OBJECTS = loop12.$(OBJEXT) \
@F90_COMPILER_FALSE@	loop12f.$(OBJEXT)
loop12_OBJECTS = $(am_loop12_OBJECTS)
loop12_LDADD = $(LDADD)
loop12_DEPENDENCIES =
loop12_LDFLAGS =
@F90_COMPILER_TRUE@am_loop13_OBJECTS = loop13.$(OBJEXT) \
@F90_COMPILER_TRUE@	loop13f.$(OBJEXT) loop13f90.$(OBJEXT)
@F90_COMPILER_FALSE@am_loop13_OBJECTS = loop13.$(OBJEXT) \
@F90_COMPILER_FALSE@	loop13f.$(OBJEXT)
loop13_OBJECTS = $(am_loop13_OBJECTS)
loop13_LDADD = $(LDADD)
loop13_DEPENDENCIES =
loop13_LDFLAGS =
@F90_COMPILER_TRUE@am_loop14_OBJECTS = loop14.$(OBJEXT) \
@F90_COMPILER_TRUE@	loop14f.$(OBJEXT) loop14f90.$(OBJEXT)
@F90_COMPILER_FALSE@am_loop14_OBJECTS = loop14.$(OBJEXT) \
@F90_COMPILER_FALSE@	loop14f.$(OBJEXT)
loop14_OBJECTS = $(am_loop14_OBJECTS)
loop14_LDADD = $(LDADD)
loop14_DEPENDENCIES =
loop14_LDFLAGS =
@F90_COMPILER_TRUE@am_loop15_OBJECTS = loop15.$(OBJEXT) \
@F90_COMPILER_TRUE@	loop15f.$(OBJEXT) loop15f90.$(OBJEXT)
@F90_COMPILER_FALSE@am_loop15_OBJECTS = loop15.$(OBJEXT) \
@F90_COMPILER_FALSE@	loop15f.$(OBJEXT)
loop15_OBJECTS = $(am_loop15_OBJECTS)
loop15_LDADD = $(LDADD)
loop15_DEPENDENCIES =
loop15_LDFLAGS =
@F90_COMPILER_TRUE@am_loop16_OBJECTS = loop16.$(OBJEXT) \
@F90_COMPILER_TRUE@	loop16f.$(OBJEXT) loop16f90.$(OBJEXT)
@F90_COMPILER_FALSE@am_loop16_OBJECTS = loop16.$(OBJEXT) \
@F90_COMPILER_FALSE@	loop16f.$(OBJEXT)
loop16_OBJECTS = $(am_loop16_OBJECTS)
loop16_LDADD = $(LDADD)
loop16_DEPENDENCIES =
loop16_LDFLAGS =
@F90_COMPILER_TRUE@am_loop17_OBJECTS = loop17.$(OBJEXT) \
@F90_COMPILER_TRUE@	loop17f.$(OBJEXT) loop17f90.$(OBJEXT)
@F90_COMPILER_FALSE@am_loop17_OBJECTS = loop17.$(OBJEXT) \
@F90_COMPILER_FALSE@	loop17f.$(OBJEXT)
loop17_OBJECTS = $(am_loop17_OBJECTS)
loop17_LDADD = $(LDADD)
loop17_DEPENDENCIES =
loop17_LDFLAGS =
@F90_COMPILER_TRUE@am_loop18_OBJECTS = loop18.$(OBJEXT) \
@F90_COMPILER_TRUE@	loop18f.$(OBJEXT) loop18f90.$(OBJEXT)
@F90_COMPILER_FALSE@am_loop18_OBJECTS = loop18.$(OBJEXT) \
@F90_COMPILER_FALSE@	loop18f.$(OBJEXT)
loop18_OBJECTS = $(am_loop18_OBJECTS)
loop18_LDADD = $(LDADD)
loop18_DEPENDENCIES =
loop18_LDFLAGS =
@F90_COMPILER_TRUE@am_loop19_OBJECTS = loop19.$(OBJEXT) \
@F90_COMPILER_TRUE@	loop19f.$(OBJEXT) loop19f90.$(OBJEXT)
@F90_COMPILER_FALSE@am_loop19_OBJECTS = loop19.$(OBJEXT) \
@F90_COMPILER_FALSE@	loop19f.$(OBJEXT)
loop19_OBJECTS = $(am_loop19_OBJECTS)
loop19_LDADD = $(LDADD)
loop19_DEPENDENCIES =
loop19_LDFLAGS =
@F90_COMPILER_TRUE@am_loop2_OBJECTS = loop2.$(OBJEXT) loop2f.$(OBJEXT) \
@F90_COMPILER_TRUE@	loop2f90.$(OBJEXT)
@F90_COMPILER_FALSE@am_loop2_OBJECTS = loop2.$(OBJEXT) loop2f.$(OBJEXT)
loop2_OBJECTS = $(am_loop2_OBJECTS)
loop2_LDADD = $(LDADD)
loop2_DEPENDENCIES =
loop2_LDFLAGS =
@F90_COMPILER_TRUE@am_loop21_OBJECTS = loop21.$(OBJEXT) \
@F90_COMPILER_TRUE@	loop21f.$(OBJEXT) loop21f90.$(OBJEXT)
@F90_COMPILER_FALSE@am_loop21_OBJECTS = loop21.$(OBJEXT) \
@F90_COMPILER_FALSE@	loop21f.$(OBJEXT)
loop21_OBJECTS = $(am_loop21_OBJECTS)
loop21_LDADD = $(LDADD)
loop21_DEPENDENCIES =
loop21_LDFLAGS =
@F90_COMPILER_TRUE@am_loop22_OBJECTS = loop22.$(OBJEXT) \
@F90_COMPILER_TRUE@	loop22f.$(OBJEXT) loop22f90.$(OBJEXT)
@F90_COMPILER_FALSE@am_loop22_OBJECTS = loop22.$(OBJEXT) \
@F90_COMPILER_FALSE@	loop22f.$(OBJEXT)
loop22_OBJECTS = $(am_loop22_OBJECTS)
loop22_LDADD = $(LDADD)
loop22_DEPENDENCIES =
loop22_LDFLAGS =
@F90_COMPILER_TRUE@am_loop23_OBJECTS = loop23.$(OBJEXT) \
@F90_COMPILER_TRUE@	loop23f.$(OBJEXT) loop23f90.$(OBJEXT)
@F90_COMPILER_FALSE@am_loop23_OBJECTS = loop23.$(OBJEXT) \
@F90_COMPILER_FALSE@	loop23f.$(OBJEXT)
loop23_OBJECTS = $(am_loop23_OBJECTS)
loop23_LDADD = $(LDADD)
loop23_DEPENDENCIES =
loop23_LDFLAGS =
@F90_COMPILER_TRUE@am_loop24_OBJECTS = loop24.$(OBJEXT) \
@F90_COMPILER_TRUE@	loop24f.$(OBJEXT) loop24f90.$(OBJEXT)
@F90_COMPILER_FALSE@am_loop24_OBJECTS = loop24.$(OBJEXT) \
@F90_COMPILER_FALSE@	loop24f.$(OBJEXT)
loop24_OBJECTS = $(am_loop24_OBJECTS)
loop24_LDADD = $(LDADD)
loop24_DEPENDENCIES =
loop24_LDFLAGS =
@F90_COMPILER_TRUE@am_loop25_OBJECTS = loop25.$(OBJEXT) \
@F90_COMPILER_TRUE@	loop25f.$(OBJEXT) loop25f90.$(OBJEXT)
@F90_COMPILER_FALSE@am_loop25_OBJECTS = loop25.$(OBJEXT) \
@F90_COMPILER_FALSE@	loop25f.$(OBJEXT)
loop25_OBJECTS = $(am_loop25_OBJECTS)
loop25_LDADD = $(LDADD)
loop25_DEPENDENCIES =
loop25_LDFLAGS =
@F90_COMPILER_TRUE@am_loop3_OBJECTS = loop3.$(OBJEXT) loop3f.$(OBJEXT) \
@F90_COMPILER_TRUE@	loop3f90.$(OBJEXT)
@F90_COMPILER_FALSE@am_loop3_OBJECTS = loop3.$(OBJEXT) loop3f.$(OBJEXT)
loop3_OBJECTS = $(am_loop3_OBJECTS)
loop3_LDADD = $(LDADD)
loop3_DEPENDENCIES =
loop3_LDFLAGS =
@F90_COMPILER_TRUE@am_loop36_OBJECTS = loop36.$(OBJEXT) \
@F90_COMPILER_TRUE@	loop36f.$(OBJEXT) loop36f90.$(OBJEXT)
@F90_COMPILER_FALSE@am_loop36_OBJECTS = loop36.$(OBJEXT) \
@F90_COMPILER_FALSE@	loop36f.$(OBJEXT)
loop36_OBJECTS = $(am_loop36_OBJECTS)
loop36_LDADD = $(LDADD)
loop36_DEPENDENCIES =
loop36_LDFLAGS =
@F90_COMPILER_TRUE@am_loop5_OBJECTS = loop5.$(OBJEXT) loop5f.$(OBJEXT) \
@F90_COMPILER_TRUE@	loop5f90.$(OBJEXT)
@F90_COMPILER_FALSE@am_loop5_OBJECTS = loop5.$(OBJEXT) loop5f.$(OBJEXT)
loop5_OBJECTS = $(am_loop5_OBJECTS)
loop5_LDADD = $(LDADD)
loop5_DEPENDENCIES =
loop5_LDFLAGS =
@F90_COMPILER_TRUE@am_loop6_OBJECTS = loop6.$(OBJEXT) loop6f.$(OBJEXT) \
@F90_COMPILER_TRUE@	loop6f90.$(OBJEXT)
@F90_COMPILER_FALSE@am_loop6_OBJECTS = loop6.$(OBJEXT) loop6f.$(OBJEXT)
loop6_OBJECTS = $(am_loop6_OBJECTS)
loop6_LDADD = $(LDADD)
loop6_DEPENDENCIES =
loop6_LDFLAGS =
@F90_COMPILER_TRUE@am_loop8_OBJECTS = loop8.$(OBJEXT) loop8f.$(OBJEXT) \
@F90_COMPILER_TRUE@	loop8f90.$(OBJEXT)
@F90_COMPILER_FALSE@am_loop8_OBJECTS = loop8.$(OBJEXT) loop8f.$(OBJEXT)
loop8_OBJECTS = $(am_loop8_OBJECTS)
loop8_LDADD = $(LDADD)
loop8_DEPENDENCIES =
loop8_LDFLAGS =
@F90_COMPILER_TRUE@am_loop9_OBJECTS = loop9.$(OBJEXT) loop9f.$(OBJEXT) \
@F90_COMPILER_TRUE@	loop9f90.$(OBJEXT)
@F90_COMPILER_FALSE@am_loop9_OBJECTS = loop9.$(OBJEXT) loop9f.$(OBJEXT)
loop9_OBJECTS = $(am_loop9_OBJECTS)
loop9_LDADD = $(LDADD)
loop9_DEPENDENCIES =
loop9_LDFLAGS =
@F90_COMPILER_TRUE@am_qcd_OBJECTS = qcd.$(OBJEXT) qcdf.$(OBJEXT)
@F90_COMPILER_FALSE@am_qcd_OBJECTS = qcd.$(OBJEXT) qcdf.$(OBJEXT)
qcd_OBJECTS = $(am_qcd_OBJECTS)
qcd_LDADD = $(LDADD)
qcd_DEPENDENCIES =
qcd_LDFLAGS =
@F90_COMPILER_TRUE@am_stencil_OBJECTS = stencil.$(OBJEXT) \
@F90_COMPILER_TRUE@	stencilf.$(OBJEXT) stencilf2.$(OBJEXT) \
@F90_COMPILER_TRUE@	stencilf90.$(OBJEXT)
@F90_COMPILER_FALSE@am_stencil_OBJECTS = stencil.$(OBJEXT) \
@F90_COMPILER_FALSE@	stencilf.$(OBJEXT) stencilf2.$(OBJEXT)
stencil_OBJECTS = $(am_stencil_OBJECTS)
stencil_LDADD = $(LDADD)
stencil_DEPENDENCIES =
stencil_LDFLAGS =
@F90_COMPILER_TRUE@am_tinydaxpy_OBJECTS = tinydaxpy.$(OBJEXT)
@F90_COMPILER_FALSE@am_tinydaxpy_OBJECTS = tinydaxpy.$(OBJEXT)
tinydaxpy_OBJECTS = $(am_tinydaxpy_OBJECTS)
tinydaxpy_LDADD = $(LDADD)
tinydaxpy_DEPENDENCIES =
tinydaxpy_LDFLAGS =

DEFS = @DEFS@
DEFAULT_INCLUDES =  -I. -I$(srcdir)
CPPFLAGS = @CPPFLAGS@
depcomp = $(SHELL) $(top_srcdir)/depcomp
am__depfiles_maybe = depfiles
@AMDEP_TRUE@DEP_FILES = ./$(DEPDIR)/acou3d.Po ./$(DEPDIR)/acou3db1.Po \
@AMDEP_TRUE@	./$(DEPDIR)/acou3db2.Po ./$(DEPDIR)/acou3db3.Po \
@AMDEP_TRUE@	./$(DEPDIR)/acou3db4.Po ./$(DEPDIR)/acoustic.Po \
@AMDEP_TRUE@	./$(DEPDIR)/daxpy.Po ./$(DEPDIR)/haney.Po \
@AMDEP_TRUE@	./$(DEPDIR)/hao-he.Po ./$(DEPDIR)/loop1.Po \
@AMDEP_TRUE@	./$(DEPDIR)/loop10.Po ./$(DEPDIR)/loop11.Po \
@AMDEP_TRUE@	./$(DEPDIR)/loop12.Po ./$(DEPDIR)/loop13.Po \
@AMDEP_TRUE@	./$(DEPDIR)/loop14.Po ./$(DEPDIR)/loop15.Po \
@AMDEP_TRUE@	./$(DEPDIR)/loop16.Po ./$(DEPDIR)/loop17.Po \
@AMDEP_TRUE@	./$(DEPDIR)/loop18.Po ./$(DEPDIR)/loop19.Po \
@AMDEP_TRUE@	./$(DEPDIR)/loop2.Po ./$(DEPDIR)/loop21.Po \
@AMDEP_TRUE@	./$(DEPDIR)/loop22.Po ./$(DEPDIR)/loop23.Po \
@AMDEP_TRUE@	./$(DEPDIR)/loop24.Po ./$(DEPDIR)/loop25.Po \
@AMDEP_TRUE@	./$(DEPDIR)/loop3.Po ./$(DEPDIR)/loop36.Po \
@AMDEP_TRUE@	./$(DEPDIR)/loop5.Po ./$(DEPDIR)/loop6.Po \
@AMDEP_TRUE@	./$(DEPDIR)/loop8.Po ./$(DEPDIR)/loop9.Po \
@AMDEP_TRUE@	./$(DEPDIR)/qcd.Po ./$(DEPDIR)/stencil.Po \
@AMDEP_TRUE@	./$(DEPDIR)/tinydaxpy.Po
CXXCOMPILE = $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS)
CXXLD = $(CXX)
CXXLINK = $(CXXLD) $(AM_CXXFLAGS) $(CXXFLAGS) $(AM_LDFLAGS) $(LDFLAGS) \
	-o $@
F77LD = $(F77)
F77LINK = $(F77LD) $(AM_FFLAGS) $(FFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@
CFLAGS = @CFLAGS@
COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \
	$(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
CCLD = $(CC)
LINK = $(CCLD) $(AM_CFLAGS) $(CFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@
DIST_SOURCES = $(acou3d_SOURCES) $(acoustic_SOURCES) $(daxpy_SOURCES) \
	$(haney_SOURCES) $(hao_he_SOURCES) $(loop1_SOURCES) \
	$(loop10_SOURCES) $(loop11_SOURCES) $(loop12_SOURCES) \
	$(loop13_SOURCES) $(loop14_SOURCES) $(loop15_SOURCES) \
	$(loop16_SOURCES) $(loop17_SOURCES) $(loop18_SOURCES) \
	$(loop19_SOURCES) $(loop2_SOURCES) $(loop21_SOURCES) \
	$(loop22_SOURCES) $(loop23_SOURCES) $(loop24_SOURCES) \
	$(loop25_SOURCES) $(loop3_SOURCES) $(loop36_SOURCES) \
	$(loop5_SOURCES) $(loop6_SOURCES) $(loop8_SOURCES) \
	$(loop9_SOURCES) $(qcd_SOURCES) $(stencil_SOURCES) \
	$(tinydaxpy_SOURCES)
DATA = $(benchmark_DATA)

DIST_COMMON = Makefile.am Makefile.in compile plot_benchmarks.m.in
SOURCES = $(acou3d_SOURCES) $(acoustic_SOURCES) $(daxpy_SOURCES) $(haney_SOURCES) $(hao_he_SOURCES) $(loop1_SOURCES) $(loop10_SOURCES) $(loop11_SOURCES) $(loop12_SOURCES) $(loop13_SOURCES) $(loop14_SOURCES) $(loop15_SOURCES) $(loop16_SOURCES) $(loop17_SOURCES) $(loop18_SOURCES) $(loop19_SOURCES) $(loop2_SOURCES) $(loop21_SOURCES) $(loop22_SOURCES) $(loop23_SOURCES) $(loop24_SOURCES) $(loop25_SOURCES) $(loop3_SOURCES) $(loop36_SOURCES) $(loop5_SOURCES) $(loop6_SOURCES) $(loop8_SOURCES) $(loop9_SOURCES) $(qcd_SOURCES) $(stencil_SOURCES) $(tinydaxpy_SOURCES)

all: all-am

.SUFFIXES:
.SUFFIXES: .cpp .f .f90 .o .obj
$(srcdir)/Makefile.in: @MAINTAINER_MODE_TRUE@ Makefile.am  $(top_srcdir)/configure.in $(ACLOCAL_M4)
	cd $(top_srcdir) && \
	  $(AUTOMAKE) --gnu  benchmarks/Makefile
Makefile: @MAINTAINER_MODE_TRUE@ $(srcdir)/Makefile.in  $(top_builddir)/config.status
	cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)
plot_benchmarks.m: $(top_builddir)/config.status plot_benchmarks.m.in
	cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@
acou3d$(EXEEXT): $(acou3d_OBJECTS) $(acou3d_DEPENDENCIES) 
	@rm -f acou3d$(EXEEXT)
	$(CXXLINK) $(acou3d_LDFLAGS) $(acou3d_OBJECTS) $(acou3d_LDADD) $(LIBS)
acoustic$(EXEEXT): $(acoustic_OBJECTS) $(acoustic_DEPENDENCIES) 
	@rm -f acoustic$(EXEEXT)
	$(CXXLINK) $(acoustic_LDFLAGS) $(acoustic_OBJECTS) $(acoustic_LDADD) $(LIBS)
daxpy$(EXEEXT): $(daxpy_OBJECTS) $(daxpy_DEPENDENCIES) 
	@rm -f daxpy$(EXEEXT)
	$(CXXLINK) $(daxpy_LDFLAGS) $(daxpy_OBJECTS) $(daxpy_LDADD) $(LIBS)
haney$(EXEEXT): $(haney_OBJECTS) $(haney_DEPENDENCIES) 
	@rm -f haney$(EXEEXT)
	$(CXXLINK) $(haney_LDFLAGS) $(haney_OBJECTS) $(haney_LDADD) $(LIBS)
hao-he$(EXEEXT): $(hao_he_OBJECTS) $(hao_he_DEPENDENCIES) 
	@rm -f hao-he$(EXEEXT)
	$(CXXLINK) $(hao_he_LDFLAGS) $(hao_he_OBJECTS) $(hao_he_LDADD) $(LIBS)
loop1$(EXEEXT): $(loop1_OBJECTS) $(loop1_DEPENDENCIES) 
	@rm -f loop1$(EXEEXT)
	$(CXXLINK) $(loop1_LDFLAGS) $(loop1_OBJECTS) $(loop1_LDADD) $(LIBS)
loop10$(EXEEXT): $(loop10_OBJECTS) $(loop10_DEPENDENCIES) 
	@rm -f loop10$(EXEEXT)
	$(CXXLINK) $(loop10_LDFLAGS) $(loop10_OBJECTS) $(loop10_LDADD) $(LIBS)
loop11$(EXEEXT): $(loop11_OBJECTS) $(loop11_DEPENDENCIES) 
	@rm -f loop11$(EXEEXT)
	$(CXXLINK) $(loop11_LDFLAGS) $(loop11_OBJECTS) $(loop11_LDADD) $(LIBS)
loop12$(EXEEXT): $(loop12_OBJECTS) $(loop12_DEPENDENCIES) 
	@rm -f loop12$(EXEEXT)
	$(CXXLINK) $(loop12_LDFLAGS) $(loop12_OBJECTS) $(loop12_LDADD) $(LIBS)
loop13$(EXEEXT): $(loop13_OBJECTS) $(loop13_DEPENDENCIES) 
	@rm -f loop13$(EXEEXT)
	$(CXXLINK) $(loop13_LDFLAGS) $(loop13_OBJECTS) $(loop13_LDADD) $(LIBS)
loop14$(EXEEXT): $(loop14_OBJECTS) $(loop14_DEPENDENCIES) 
	@rm -f loop14$(EXEEXT)
	$(CXXLINK) $(loop14_LDFLAGS) $(loop14_OBJECTS) $(loop14_LDADD) $(LIBS)
loop15$(EXEEXT): $(loop15_OBJECTS) $(loop15_DEPENDENCIES) 
	@rm -f loop15$(EXEEXT)
	$(CXXLINK) $(loop15_LDFLAGS) $(loop15_OBJECTS) $(loop15_LDADD) $(LIBS)
loop16$(EXEEXT): $(loop16_OBJECTS) $(loop16_DEPENDENCIES) 
	@rm -f loop16$(EXEEXT)
	$(CXXLINK) $(loop16_LDFLAGS) $(loop16_OBJECTS) $(loop16_LDADD) $(LIBS)
loop17$(EXEEXT): $(loop17_OBJECTS) $(loop17_DEPENDENCIES) 
	@rm -f loop17$(EXEEXT)
	$(CXXLINK) $(loop17_LDFLAGS) $(loop17_OBJECTS) $(loop17_LDADD) $(LIBS)
loop18$(EXEEXT): $(loop18_OBJECTS) $(loop18_DEPENDENCIES) 
	@rm -f loop18$(EXEEXT)
	$(CXXLINK) $(loop18_LDFLAGS) $(loop18_OBJECTS) $(loop18_LDADD) $(LIBS)
loop19$(EXEEXT): $(loop19_OBJECTS) $(loop19_DEPENDENCIES) 
	@rm -f loop19$(EXEEXT)
	$(CXXLINK) $(loop19_LDFLAGS) $(loop19_OBJECTS) $(loop19_LDADD) $(LIBS)
loop2$(EXEEXT): $(loop2_OBJECTS) $(loop2_DEPENDENCIES) 
	@rm -f loop2$(EXEEXT)
	$(CXXLINK) $(loop2_LDFLAGS) $(loop2_OBJECTS) $(loop2_LDADD) $(LIBS)
loop21$(EXEEXT): $(loop21_OBJECTS) $(loop21_DEPENDENCIES) 
	@rm -f loop21$(EXEEXT)
	$(CXXLINK) $(loop21_LDFLAGS) $(loop21_OBJECTS) $(loop21_LDADD) $(LIBS)
loop22$(EXEEXT): $(loop22_OBJECTS) $(loop22_DEPENDENCIES) 
	@rm -f loop22$(EXEEXT)
	$(CXXLINK) $(loop22_LDFLAGS) $(loop22_OBJECTS) $(loop22_LDADD) $(LIBS)
loop23$(EXEEXT): $(loop23_OBJECTS) $(loop23_DEPENDENCIES) 
	@rm -f loop23$(EXEEXT)
	$(CXXLINK) $(loop23_LDFLAGS) $(loop23_OBJECTS) $(loop23_LDADD) $(LIBS)
loop24$(EXEEXT): $(loop24_OBJECTS) $(loop24_DEPENDENCIES) 
	@rm -f loop24$(EXEEXT)
	$(CXXLINK) $(loop24_LDFLAGS) $(loop24_OBJECTS) $(loop24_LDADD) $(LIBS)
loop25$(EXEEXT): $(loop25_OBJECTS) $(loop25_DEPENDENCIES) 
	@rm -f loop25$(EXEEXT)
	$(CXXLINK) $(loop25_LDFLAGS) $(loop25_OBJECTS) $(loop25_LDADD) $(LIBS)
loop3$(EXEEXT): $(loop3_OBJECTS) $(loop3_DEPENDENCIES) 
	@rm -f loop3$(EXEEXT)
	$(CXXLINK) $(loop3_LDFLAGS) $(loop3_OBJECTS) $(loop3_LDADD) $(LIBS)
loop36$(EXEEXT): $(loop36_OBJECTS) $(loop36_DEPENDENCIES) 
	@rm -f loop36$(EXEEXT)
	$(CXXLINK) $(loop36_LDFLAGS) $(loop36_OBJECTS) $(loop36_LDADD) $(LIBS)
loop5$(EXEEXT): $(loop5_OBJECTS) $(loop5_DEPENDENCIES) 
	@rm -f loop5$(EXEEXT)
	$(CXXLINK) $(loop5_LDFLAGS) $(loop5_OBJECTS) $(loop5_LDADD) $(LIBS)
loop6$(EXEEXT): $(loop6_OBJECTS) $(loop6_DEPENDENCIES) 
	@rm -f loop6$(EXEEXT)
	$(CXXLINK) $(loop6_LDFLAGS) $(loop6_OBJECTS) $(loop6_LDADD) $(LIBS)
loop8$(EXEEXT): $(loop8_OBJECTS) $(loop8_DEPENDENCIES) 
	@rm -f loop8$(EXEEXT)
	$(CXXLINK) $(loop8_LDFLAGS) $(loop8_OBJECTS) $(loop8_LDADD) $(LIBS)
loop9$(EXEEXT): $(loop9_OBJECTS) $(loop9_DEPENDENCIES) 
	@rm -f loop9$(EXEEXT)
	$(CXXLINK) $(loop9_LDFLAGS) $(loop9_OBJECTS) $(loop9_LDADD) $(LIBS)
qcd$(EXEEXT): $(qcd_OBJECTS) $(qcd_DEPENDENCIES) 
	@rm -f qcd$(EXEEXT)
	$(CXXLINK) $(qcd_LDFLAGS) $(qcd_OBJECTS) $(qcd_LDADD) $(LIBS)
stencil$(EXEEXT): $(stencil_OBJECTS) $(stencil_DEPENDENCIES) 
	@rm -f stencil$(EXEEXT)
	$(CXXLINK) $(stencil_LDFLAGS) $(stencil_OBJECTS) $(stencil_LDADD) $(LIBS)
tinydaxpy$(EXEEXT): $(tinydaxpy_OBJECTS) $(tinydaxpy_DEPENDENCIES) 
	@rm -f tinydaxpy$(EXEEXT)
	$(CXXLINK) $(tinydaxpy_LDFLAGS) $(tinydaxpy_OBJECTS) $(tinydaxpy_LDADD) $(LIBS)

mostlyclean-compile:
	-rm -f *.$(OBJEXT) core *.core

distclean-compile:
	-rm -f *.tab.c

@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/acou3d.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/acou3db1.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/acou3db2.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/acou3db3.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/acou3db4.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/acoustic.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/daxpy.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/haney.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/hao-he.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/loop1.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/loop10.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/loop11.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/loop12.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/loop13.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/loop14.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/loop15.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/loop16.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/loop17.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/loop18.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/loop19.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/loop2.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/loop21.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/loop22.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/loop23.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/loop24.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/loop25.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/loop3.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/loop36.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/loop5.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/loop6.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/loop8.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/loop9.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/qcd.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/stencil.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tinydaxpy.Po@am__quote@

distclean-depend:
	-rm -rf ./$(DEPDIR)

.cpp.o:
@AMDEP_TRUE@	source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/$*.Po' tmpdepfile='$(DEPDIR)/$*.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXXCOMPILE) -c -o $@ `test -f '$<' || echo '$(srcdir)/'`$<

.cpp.obj:
@AMDEP_TRUE@	source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/$*.Po' tmpdepfile='$(DEPDIR)/$*.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXXCOMPILE) -c -o $@ `cygpath -w $<`
CXXDEPMODE = @CXXDEPMODE@

.f.o:
	$(F77COMPILE) -c -o $@ `test -f '$<' || echo '$(srcdir)/'`$<

.f.obj:
	$(F77COMPILE) -c -o $@ `cygpath -w $<`

.f90.o:
	$(F77COMPILE) -c -o $@ `test -f '$<' || echo '$(srcdir)/'`$<

.f90.obj:
	$(F77COMPILE) -c -o $@ `cygpath -w $<`
uninstall-info-am:
benchmarkDATA_INSTALL = $(INSTALL_DATA)
install-benchmarkDATA: $(benchmark_DATA)
	@$(NORMAL_INSTALL)
	$(mkinstalldirs) $(DESTDIR)$(benchmarkdir)
	@list='$(benchmark_DATA)'; for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  f="`echo $$p | sed -e 's|^.*/||'`"; \
	  echo " $(benchmarkDATA_INSTALL) $$d$$p $(DESTDIR)$(benchmarkdir)/$$f"; \
	  $(benchmarkDATA_INSTALL) $$d$$p $(DESTDIR)$(benchmarkdir)/$$f; \
	done

uninstall-benchmarkDATA:
	@$(NORMAL_UNINSTALL)
	@list='$(benchmark_DATA)'; for p in $$list; do \
	  f="`echo $$p | sed -e 's|^.*/||'`"; \
	  echo " rm -f $(DESTDIR)$(benchmarkdir)/$$f"; \
	  rm -f $(DESTDIR)$(benchmarkdir)/$$f; \
	done

ETAGS = etags
ETAGSFLAGS =

tags: TAGS

ID: $(HEADERS) $(SOURCES) $(LISP) $(TAGS_FILES)
	list='$(SOURCES) $(HEADERS) $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	mkid -fID $$unique

TAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	tags=; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	test -z "$(ETAGS_ARGS)$$tags$$unique" \
	  || $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	     $$tags $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && cd $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) $$here

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)

top_distdir = ..
distdir = $(top_distdir)/$(PACKAGE)-$(VERSION)

distdir: $(DISTFILES)
	@list='$(DISTFILES)'; for file in $$list; do \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  dir=`echo "$$file" | sed -e 's,/[^/]*$$,,'`; \
	  if test "$$dir" != "$$file" && test "$$dir" != "."; then \
	    dir="/$$dir"; \
	    $(mkinstalldirs) "$(distdir)$$dir"; \
	  else \
	    dir=''; \
	  fi; \
	  if test -d $$d/$$file; then \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -pR $(srcdir)/$$file $(distdir)$$dir || exit 1; \
	    fi; \
	    cp -pR $$d/$$file $(distdir)$$dir || exit 1; \
	  else \
	    test -f $(distdir)/$$file \
	    || cp -p $$d/$$file $(distdir)/$$file \
	    || exit 1; \
	  fi; \
	done
check-am: all-am
check: check-am
all-am: Makefile $(DATA)

installdirs:
	$(mkinstalldirs) $(DESTDIR)$(benchmarkdir)

install: install-am
install-exec: install-exec-am
install-data: install-data-am
uninstall: uninstall-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-am
install-strip:
	$(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	  INSTALL_STRIP_FLAG=-s \
	  `test -z '$(STRIP)' || \
	    echo "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'"` install
mostlyclean-generic:

clean-generic:

distclean-generic:
	-rm -f Makefile $(CONFIG_CLEAN_FILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
clean: clean-am

clean-am: clean-generic mostlyclean-am

distclean: distclean-am

distclean-am: clean-am distclean-compile distclean-depend \
	distclean-generic distclean-tags

dvi: dvi-am

dvi-am:

info: info-am

info-am:

install-data-am: install-benchmarkDATA

install-exec-am:

install-info: install-info-am

install-man:

installcheck-am:

maintainer-clean: maintainer-clean-am

maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-am

mostlyclean-am: mostlyclean-compile mostlyclean-generic

uninstall-am: uninstall-benchmarkDATA uninstall-info-am

.PHONY: GTAGS all all-am check check-am clean clean-generic distclean \
	distclean-compile distclean-depend distclean-generic \
	distclean-tags distdir dvi dvi-am info info-am install \
	install-am install-benchmarkDATA install-data install-data-am \
	install-exec install-exec-am install-info install-info-am \
	install-man install-strip installcheck installcheck-am \
	installdirs maintainer-clean maintainer-clean-generic \
	mostlyclean mostlyclean-compile mostlyclean-generic tags \
	uninstall uninstall-am uninstall-benchmarkDATA \
	uninstall-info-am


@F90_COMPILER_TRUE@%.o : %f90.f
@F90_COMPILER_TRUE@	$(F90COMPILE) -c -o $@ $<

@F90_COMPILER_TRUE@%.o : %.f90
@F90_COMPILER_TRUE@	$(F90COMPILE) -c -o $@ $<

compile: $(EXTRA_PROGRAMS) 

run:	$(OTHER_BENCH)
	@for benchmark in $(OTHER_BENCH) ; do \
	  ./$$benchmark; \
	done

run-loops:	$(LOOP_KERNELS)
	@for benchmark in $(LOOP_KERNELS) ; do \
	  ./$$benchmark; \
	done

ctime:
	rm -f $(COMPILE_TIME_BENCHMARKS)
	@echo Flags: $(CXXFLAGS)
	@for benchmark in $(COMPILE_TIME_BENCHMARKS) ; do \
	  echo Compile time for $$benchmark.cpp: ; \
	  time $(CXX) $(CXXFLAGS) -c $$benchmark.cpp; \
	done

check-benchmarks: run run-loops ctime

###########################################################################

clean:
	-rm -f *.o *.ii *.int.c *.s work.pc* $(BENCHMARKS) $(COMPILE_TIME_BENCHMARKS)
# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
