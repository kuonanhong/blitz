

Wed Mar  6 11:41:32 CET 2002 Patrick Guio <patrick.guio@fys.uio.no>
	* ChangeLog: new file
	* testsuite/mattias-lindstroem-1: removed (executable)
	* configure.in: updated with autoupdate (GNU autoconf) 2.49c, added support
	for HP-UX aCC and Intel icc.
	* aclocal.m4: renamed to acinclude.m4. It contains the *_BZ_* declarations
	* acinclude.m4: new file generated by running aclocal (GNU automake) 1.4a
	* Makefile.am (in each directory): new files (to generate a Makefile.in with
	automake)
	* bin/Makefile.in, blitz/Makefile.in, blitz/array/Makefile.in,
	* blitz/generate/Makefile.in, blitz/meta/Makefile.in, lib/Makefile.in,
	* manual/Makefile.in, manual/examples/Makefile.in,
	* manual/stencils/Makefile.in, random/Makefile.in,: new files generated
	from Makefile.am generated by running automake (GNU automake) 1.4a
	* .cvsignore (in each directory): new files
	* missing: new file generated when running the script autoconf -a -c -i
	(GNU autoconf) 2.49c
	* mkinstalldirs: likewise
	* config.guess: updated from automake 1.4a
	* config.sub: likewise
	* GPL: renamed to COPYING according to GNU standard
	* AUTHORS, COPYING, NEWS: new files to follow the GNU standard
	* benchmarks/*f90.f: renamed to benchmarks/*f90.f90
	* examples/complex.cpp: renamed to examples/complex-test.cpp
	* testsuite/complex.cpp: renamed to testsuite/complex-test.cpp due to
	interference with #include<complex>
	* Makefile.in, aclocal.m4, configure, benchmarks/Makefile.in,
	bin/Makefile.in, blitz/Makefile.in, blitz/array/Makefile.in,
	blitz/generate/Makefile.in, blitz/meta/Makefile.in, compiler/Makefile.in,
	demos/Makefile.in, examples/Makefile.in, lib/Makefile.in,
	manual/Makefile.in, manual/examples/Makefile.in,
	manual/stencils/Makefile.in, random/Makefile.in, src/Makefile.in,
	testsuite/Makefile.in: regenerated files from Makefile.am generated by
	running automake (GNU automake) 1.4a
	* manual/examples/Makefile, manual/stencils/Makefile: removed, now generated
	by configure
	* CHANGELOG: renamed to ChangeLog.1
	* manual/examples/*.out: renamed to manual/examples/*.log due to
	interference with automake
	* compiler/elabbase.cpp: bar() replaced by this->bar() in zowee() const for
	ANSI C++ correctness (14.6.2(3) in the C++ Standard)
	* src/globals.cpp: char* _blitz_id replaced by char _blitz_id[]
	* random/uniform.h: irng_.random() replaced by this->irng_.random()
	everywhere for ANSI C++ correctness (14.6.2(3) in the C++ Standard)
	* random/discrete-uniform.h: likewise
	* random/normal.h: getUniform() replaced by this->getUniform() 
	* blitz/array-impl.h: 
	data_ replaced by this->data_ everywhere,
	changeToNullBlock() replaced by this->changeToNullBlock(),
	class _bz_endTag replaced by struct _bz_endTag { } declaration
	* blitz/array/resize.cc: for (d=0; d < N_rank; ++d) replaced by for (int
	d=0; d < N_rank; ++d) (for scoping)
	* blitz/array/iter.h: 
	data_ replaced by this->data_ in 
	template<class T, int N>
	class ArrayIterator : public ConstArrayIterator<T,N> {},
	removed struct _bz_endTag { }; declaration
	* blitz/array/io.cc: added typename (_bz_typename) qualifier to the
	iterator and const_iterator of Array<T_numtype,N_rank>
	* blitz/ops.h: os replaced by str in the BitwiseNot template
	* blitz/vector.h: data_ replaced by this->data_ everywhere
	* blitz/array/slicing.cc: likewise
	* blitz/array/eval.cc: likewise
	* blitz/array/methods.cc: data_ replaced by this->data_ everywhere
	numReferences() replaced by this->numReferences()
	* blitz/vector.cc: data_ replaced by this->data_ everywhere, 
	numReferences() by this->numReferences()
	* blitz/matrix.cc: data_ replaced by this->data_
	* blitz/matrix.h: likewise everywhere
	* blitz/promote.h: typename replaced by _bz_typename
	* blitz/array/reduce.cc: TinyVector<int,rank> replaced by
	TinyVector<int,T_expr::rank>
	* blitz/array/storage.h: in 
	template<int N_rank>
	class FortranArray : public GeneralArrayStorage<N_rank> {} and
	template<int N_rank>
	class ColumnMajorArray : public GeneralArrayStorage<N_rank> {}
	ordering_, ascendingFlag_, base_ replaced by this->ordering_,
	this->ascendingFlag_, this->base_
	noInitializeFlag() replaced by
	GeneralArrayStorage<N_rank>::noInitializeFlag()
	* blitz/array/where.h: minmax::max(minmax::max(stride1,stride2),stride3)
	replaced by
	stride1>(stride2=(stride2>stride3?stride2:stride3))?stride1:stride2
	* blitz/transversal.cc, blitz/transversal.h: template declaration
	template<int N_dimensions>
	_bz_typename TraversalOrderCollection<N_dimensions>::T_set
	    TraversalOrderCollection<N_dimensions>::traversals_;
	in blitz/transversal.cc moved before template specialisation
	template<>
	class TraversalOrderCollection<0> {}
	in blitz/transversal.h 
	* blitz/array/fastiter.h: for BZ_HAVE_STD only
	#include <strstream> replaced by #include <sstream> 
	ostrstream ostr replaced by ostringstream ostr



