# Makefile.in generated by automake 1.6.1 from Makefile.am.
# @configure_input@

# Copyright 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002
# Free Software Foundation, Inc.
# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.

@SET_MAKE@

#
# Written by Patrick Guio <patrick.guio@fys.uio.no>
#

# Blitz++ test suite makefile
SHELL = @SHELL@

srcdir = @srcdir@
top_srcdir = @top_srcdir@
VPATH = @srcdir@
prefix = @prefix@
exec_prefix = @exec_prefix@

bindir = @bindir@
sbindir = @sbindir@
libexecdir = @libexecdir@
datadir = @datadir@
sysconfdir = @sysconfdir@
sharedstatedir = @sharedstatedir@
localstatedir = @localstatedir@
libdir = @libdir@
infodir = @infodir@
mandir = @mandir@
includedir = @includedir@
oldincludedir = /usr/include
pkgdatadir = $(datadir)/@PACKAGE@
pkglibdir = $(libdir)/@PACKAGE@
pkgincludedir = $(includedir)/@PACKAGE@
top_builddir = ..

ACLOCAL = @ACLOCAL@
AUTOCONF = @AUTOCONF@
AUTOMAKE = @AUTOMAKE@
AUTOHEADER = @AUTOHEADER@

am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
INSTALL = @INSTALL@
INSTALL_PROGRAM = @INSTALL_PROGRAM@
INSTALL_DATA = @INSTALL_DATA@
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
INSTALL_SCRIPT = @INSTALL_SCRIPT@
INSTALL_HEADER = $(INSTALL_DATA)
transform = @program_transform_name@
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :

EXEEXT = @EXEEXT@
OBJEXT = @OBJEXT@
PATH_SEPARATOR = @PATH_SEPARATOR@
AMTAR = @AMTAR@
AR = @AR@
AR_FLAGS = @AR_FLAGS@
AWK = @AWK@
BLASLIB = @BLASLIB@
CC = @CC@
CPP = @CPP@
CXX = @CXX@
CXXFFLAGS = @CXXFFLAGS@
CXXFLAGS = @CXXFLAGS@ @CXX_DEBUG_FLAGS@
CXX_DEBUG_FLAGS = @CXX_DEBUG_FLAGS@
CXX_LIBS = @CXX_LIBS@
CXX_OPTIMIZE_FLAGS = @CXX_OPTIMIZE_FLAGS@
DEPDIR = @DEPDIR@
F77 = @F77@
F77_OPTIMIZE_FLAGS = @F77_OPTIMIZE_FLAGS@
F90 = @F90@
F90_OPTIMIZE_FLAGS = @F90_OPTIMIZE_FLAGS@
FFLAGS = @FFLAGS@
FORTLIBS = @FORTLIBS@
INSTALL_STRIP_PROGRAM = @INSTALL_STRIP_PROGRAM@
LDFLAGS = @LDFLAGS@
PACKAGE = @PACKAGE@
RANLIB = @RANLIB@
STRIP = @STRIP@

SUBDIRS = .
VERSION = @VERSION@
am__include = @am__include@
am__quote = @am__quote@
install_sh = @install_sh@

EXTRA_DIST = testsuite.h

INCLUDES = -I$(top_srcdir)
LDADD = -L$(top_srcdir)/lib -lblitz

# install this file
testsuitedir = $(prefix)/testsuite
testsuite_DATA = Adnene-Ben-Abdallah-1.cpp Adnene-Ben-Abdallah-2.cpp \
Josef-Wagenhuber.cpp Olaf-Ronneberger-1.cpp Ulisses-Mello-1.cpp \
arrayresize.cpp chris-jeffery-1.cpp chris-jeffery-2.cpp chris-jeffery-3.cpp \
complex-test.cpp constarray.cpp contiguous.cpp copy.cpp ctors.cpp \
derrick-bass-1.cpp derrick-bass-3.cpp exprctor.cpp extract.cpp free.cpp \
gary-huber-1.cpp initialize.cpp interlace.cpp iter.cpp loop1.cpp \
matthias-troyer-1.cpp matthias-troyer-2.cpp mattias-lindstroem-1.cpp \
minmax.cpp minsumpow.cpp module1.cpp module2.cpp newet.cpp \
peter-bienstman-1.cpp peter-bienstman-2.cpp peter-bienstman-3.cpp \
peter-bienstman-4.cpp peter-bienstman-5.cpp peter-nordlund-1.cpp \
peter-nordlund-2.cpp peter-nordlund-3.cpp promote.cpp qcd.cpp reduce.cpp \
reindex.cpp reverse.cpp shape.cpp shapecheck.cpp storage.cpp stub.cpp \
theodore-papadopoulo-1.cpp tinymat.cpp tinyvec.cpp transpose.cpp \
troyer-genilloud.cpp wei-ku-1.cpp where.cpp Makefile


EXTRA_PROGRAMS = Adnene-Ben-Abdallah-1 Adnene-Ben-Abdallah-2 arrayresize \
chris-jeffery-1 chris-jeffery-2 chris-jeffery-3 complex-test constarray \
contiguous copy ctors derrick-bass-1 derrick-bass-3 exprctor extract free \
gary-huber-1 initialize interlace iter Josef-Wagenhuber loop1 \
matthias-troyer-1 matthias-troyer-2 mattias-lindstroem-1 minmax minsumpow \
module newet Olaf-Ronneberger-1 peter-bienstman-1 peter-bienstman-2 \
peter-bienstman-3 peter-bienstman-4 peter-bienstman-5 peter-nordlund-1 \
peter-nordlund-2 peter-nordlund-3 promote qcd reduce reindex reverse \
shapecheck shape storage stub theodore-papadopoulo-1 tinymat tinyvec \
transpose troyer-genilloud Ulisses-Mello-1 wei-ku-1 where


Adnene_Ben_Abdallah_1_SOURCES = Adnene-Ben-Abdallah-1.cpp
Adnene_Ben_Abdallah_2_SOURCES = Adnene-Ben-Abdallah-2.cpp
arrayresize_SOURCES = arrayresize.cpp
chris_jeffery_1_SOURCES = chris-jeffery-1.cpp
chris_jeffery_2_SOURCES = chris-jeffery-2.cpp
chris_jeffery_3_SOURCES = chris-jeffery-3.cpp
complex_test_SOURCES = complex-test.cpp
constarray_SOURCES = constarray.cpp
contiguous_SOURCES = contiguous.cpp
copy_SOURCES = copy.cpp
ctors_SOURCES = ctors.cpp
derrick_bass_1_SOURCES = derrick-bass-1.cpp
derrick_bass_3_SOURCES = derrick-bass-3.cpp
exprctor_SOURCES = exprctor.cpp
extract_SOURCES = extract.cpp
free_SOURCES = free.cpp
gary_huber_1_SOURCES = gary-huber-1.cpp
initialize_SOURCES = initialize.cpp
interlace_SOURCES = interlace.cpp
iter_SOURCES = iter.cpp
Josef_Wagenhuber_SOURCES = Josef-Wagenhuber.cpp
loop1_SOURCES = loop1.cpp
matthias_troyer_1_SOURCES = matthias-troyer-1.cpp
matthias_troyer_2_SOURCES = matthias-troyer-2.cpp
mattias_lindstroem_1_SOURCES = mattias-lindstroem-1.cpp
minmax_SOURCES = minmax.cpp
minsumpow_SOURCES = minsumpow.cpp
module_SOURCES = module1.cpp module2.cpp
newet_SOURCES = newet.cpp
Olaf_Ronneberger_1_SOURCES = Olaf-Ronneberger-1.cpp
peter_bienstman_1_SOURCES = peter-bienstman-1.cpp
peter_bienstman_2_SOURCES = peter-bienstman-2.cpp
peter_bienstman_3_SOURCES = peter-bienstman-3.cpp
peter_bienstman_4_SOURCES = peter-bienstman-4.cpp
peter_bienstman_5_SOURCES = peter-bienstman-5.cpp
peter_nordlund_1_SOURCES = peter-nordlund-1.cpp
peter_nordlund_2_SOURCES = peter-nordlund-2.cpp
peter_nordlund_3_SOURCES = peter-nordlund-3.cpp
promote_SOURCES = promote.cpp
qcd_SOURCES = qcd.cpp
reduce_SOURCES = reduce.cpp
reindex_SOURCES = reindex.cpp
reverse_SOURCES = reverse.cpp
shapecheck_SOURCES = shapecheck.cpp
shape_SOURCES = shape.cpp
storage_SOURCES = storage.cpp
stub_SOURCES = stub.cpp
theodore_papadopoulo_1_SOURCES = theodore-papadopoulo-1.cpp
tinymat_SOURCES = tinymat.cpp
tinyvec_SOURCES = tinyvec.cpp
transpose_SOURCES = transpose.cpp
troyer_genilloud_SOURCES = troyer-genilloud.cpp
Ulisses_Mello_1_SOURCES = Ulisses-Mello-1.cpp
wei_ku_1_SOURCES = wei-ku-1.cpp
where_SOURCES = where.cpp
subdir = testsuite
mkinstalldirs = $(SHELL) $(top_srcdir)/mkinstalldirs
CONFIG_CLEAN_FILES =
EXTRA_PROGRAMS = Adnene-Ben-Abdallah-1$(EXEEXT) \
	Adnene-Ben-Abdallah-2$(EXEEXT) arrayresize$(EXEEXT) \
	chris-jeffery-1$(EXEEXT) chris-jeffery-2$(EXEEXT) \
	chris-jeffery-3$(EXEEXT) complex-test$(EXEEXT) \
	constarray$(EXEEXT) contiguous$(EXEEXT) copy$(EXEEXT) \
	ctors$(EXEEXT) derrick-bass-1$(EXEEXT) derrick-bass-3$(EXEEXT) \
	exprctor$(EXEEXT) extract$(EXEEXT) free$(EXEEXT) \
	gary-huber-1$(EXEEXT) initialize$(EXEEXT) interlace$(EXEEXT) \
	iter$(EXEEXT) Josef-Wagenhuber$(EXEEXT) loop1$(EXEEXT) \
	matthias-troyer-1$(EXEEXT) matthias-troyer-2$(EXEEXT) \
	mattias-lindstroem-1$(EXEEXT) minmax$(EXEEXT) \
	minsumpow$(EXEEXT) module$(EXEEXT) newet$(EXEEXT) \
	Olaf-Ronneberger-1$(EXEEXT) peter-bienstman-1$(EXEEXT) \
	peter-bienstman-2$(EXEEXT) peter-bienstman-3$(EXEEXT) \
	peter-bienstman-4$(EXEEXT) peter-bienstman-5$(EXEEXT) \
	peter-nordlund-1$(EXEEXT) peter-nordlund-2$(EXEEXT) \
	peter-nordlund-3$(EXEEXT) promote$(EXEEXT) qcd$(EXEEXT) \
	reduce$(EXEEXT) reindex$(EXEEXT) reverse$(EXEEXT) \
	shapecheck$(EXEEXT) shape$(EXEEXT) storage$(EXEEXT) \
	stub$(EXEEXT) theodore-papadopoulo-1$(EXEEXT) tinymat$(EXEEXT) \
	tinyvec$(EXEEXT) transpose$(EXEEXT) troyer-genilloud$(EXEEXT) \
	Ulisses-Mello-1$(EXEEXT) wei-ku-1$(EXEEXT) where$(EXEEXT)
am_Adnene_Ben_Abdallah_1_OBJECTS = Adnene-Ben-Abdallah-1.$(OBJEXT)
Adnene_Ben_Abdallah_1_OBJECTS = $(am_Adnene_Ben_Abdallah_1_OBJECTS)
Adnene_Ben_Abdallah_1_LDADD = $(LDADD)
Adnene_Ben_Abdallah_1_DEPENDENCIES =
Adnene_Ben_Abdallah_1_LDFLAGS =
am_Adnene_Ben_Abdallah_2_OBJECTS = Adnene-Ben-Abdallah-2.$(OBJEXT)
Adnene_Ben_Abdallah_2_OBJECTS = $(am_Adnene_Ben_Abdallah_2_OBJECTS)
Adnene_Ben_Abdallah_2_LDADD = $(LDADD)
Adnene_Ben_Abdallah_2_DEPENDENCIES =
Adnene_Ben_Abdallah_2_LDFLAGS =
am_Josef_Wagenhuber_OBJECTS = Josef-Wagenhuber.$(OBJEXT)
Josef_Wagenhuber_OBJECTS = $(am_Josef_Wagenhuber_OBJECTS)
Josef_Wagenhuber_LDADD = $(LDADD)
Josef_Wagenhuber_DEPENDENCIES =
Josef_Wagenhuber_LDFLAGS =
am_Olaf_Ronneberger_1_OBJECTS = Olaf-Ronneberger-1.$(OBJEXT)
Olaf_Ronneberger_1_OBJECTS = $(am_Olaf_Ronneberger_1_OBJECTS)
Olaf_Ronneberger_1_LDADD = $(LDADD)
Olaf_Ronneberger_1_DEPENDENCIES =
Olaf_Ronneberger_1_LDFLAGS =
am_Ulisses_Mello_1_OBJECTS = Ulisses-Mello-1.$(OBJEXT)
Ulisses_Mello_1_OBJECTS = $(am_Ulisses_Mello_1_OBJECTS)
Ulisses_Mello_1_LDADD = $(LDADD)
Ulisses_Mello_1_DEPENDENCIES =
Ulisses_Mello_1_LDFLAGS =
am_arrayresize_OBJECTS = arrayresize.$(OBJEXT)
arrayresize_OBJECTS = $(am_arrayresize_OBJECTS)
arrayresize_LDADD = $(LDADD)
arrayresize_DEPENDENCIES =
arrayresize_LDFLAGS =
am_chris_jeffery_1_OBJECTS = chris-jeffery-1.$(OBJEXT)
chris_jeffery_1_OBJECTS = $(am_chris_jeffery_1_OBJECTS)
chris_jeffery_1_LDADD = $(LDADD)
chris_jeffery_1_DEPENDENCIES =
chris_jeffery_1_LDFLAGS =
am_chris_jeffery_2_OBJECTS = chris-jeffery-2.$(OBJEXT)
chris_jeffery_2_OBJECTS = $(am_chris_jeffery_2_OBJECTS)
chris_jeffery_2_LDADD = $(LDADD)
chris_jeffery_2_DEPENDENCIES =
chris_jeffery_2_LDFLAGS =
am_chris_jeffery_3_OBJECTS = chris-jeffery-3.$(OBJEXT)
chris_jeffery_3_OBJECTS = $(am_chris_jeffery_3_OBJECTS)
chris_jeffery_3_LDADD = $(LDADD)
chris_jeffery_3_DEPENDENCIES =
chris_jeffery_3_LDFLAGS =
am_complex_test_OBJECTS = complex-test.$(OBJEXT)
complex_test_OBJECTS = $(am_complex_test_OBJECTS)
complex_test_LDADD = $(LDADD)
complex_test_DEPENDENCIES =
complex_test_LDFLAGS =
am_constarray_OBJECTS = constarray.$(OBJEXT)
constarray_OBJECTS = $(am_constarray_OBJECTS)
constarray_LDADD = $(LDADD)
constarray_DEPENDENCIES =
constarray_LDFLAGS =
am_contiguous_OBJECTS = contiguous.$(OBJEXT)
contiguous_OBJECTS = $(am_contiguous_OBJECTS)
contiguous_LDADD = $(LDADD)
contiguous_DEPENDENCIES =
contiguous_LDFLAGS =
am_copy_OBJECTS = copy.$(OBJEXT)
copy_OBJECTS = $(am_copy_OBJECTS)
copy_LDADD = $(LDADD)
copy_DEPENDENCIES =
copy_LDFLAGS =
am_ctors_OBJECTS = ctors.$(OBJEXT)
ctors_OBJECTS = $(am_ctors_OBJECTS)
ctors_LDADD = $(LDADD)
ctors_DEPENDENCIES =
ctors_LDFLAGS =
am_derrick_bass_1_OBJECTS = derrick-bass-1.$(OBJEXT)
derrick_bass_1_OBJECTS = $(am_derrick_bass_1_OBJECTS)
derrick_bass_1_LDADD = $(LDADD)
derrick_bass_1_DEPENDENCIES =
derrick_bass_1_LDFLAGS =
am_derrick_bass_3_OBJECTS = derrick-bass-3.$(OBJEXT)
derrick_bass_3_OBJECTS = $(am_derrick_bass_3_OBJECTS)
derrick_bass_3_LDADD = $(LDADD)
derrick_bass_3_DEPENDENCIES =
derrick_bass_3_LDFLAGS =
am_exprctor_OBJECTS = exprctor.$(OBJEXT)
exprctor_OBJECTS = $(am_exprctor_OBJECTS)
exprctor_LDADD = $(LDADD)
exprctor_DEPENDENCIES =
exprctor_LDFLAGS =
am_extract_OBJECTS = extract.$(OBJEXT)
extract_OBJECTS = $(am_extract_OBJECTS)
extract_LDADD = $(LDADD)
extract_DEPENDENCIES =
extract_LDFLAGS =
am_free_OBJECTS = free.$(OBJEXT)
free_OBJECTS = $(am_free_OBJECTS)
free_LDADD = $(LDADD)
free_DEPENDENCIES =
free_LDFLAGS =
am_gary_huber_1_OBJECTS = gary-huber-1.$(OBJEXT)
gary_huber_1_OBJECTS = $(am_gary_huber_1_OBJECTS)
gary_huber_1_LDADD = $(LDADD)
gary_huber_1_DEPENDENCIES =
gary_huber_1_LDFLAGS =
am_initialize_OBJECTS = initialize.$(OBJEXT)
initialize_OBJECTS = $(am_initialize_OBJECTS)
initialize_LDADD = $(LDADD)
initialize_DEPENDENCIES =
initialize_LDFLAGS =
am_interlace_OBJECTS = interlace.$(OBJEXT)
interlace_OBJECTS = $(am_interlace_OBJECTS)
interlace_LDADD = $(LDADD)
interlace_DEPENDENCIES =
interlace_LDFLAGS =
am_iter_OBJECTS = iter.$(OBJEXT)
iter_OBJECTS = $(am_iter_OBJECTS)
iter_LDADD = $(LDADD)
iter_DEPENDENCIES =
iter_LDFLAGS =
am_loop1_OBJECTS = loop1.$(OBJEXT)
loop1_OBJECTS = $(am_loop1_OBJECTS)
loop1_LDADD = $(LDADD)
loop1_DEPENDENCIES =
loop1_LDFLAGS =
am_matthias_troyer_1_OBJECTS = matthias-troyer-1.$(OBJEXT)
matthias_troyer_1_OBJECTS = $(am_matthias_troyer_1_OBJECTS)
matthias_troyer_1_LDADD = $(LDADD)
matthias_troyer_1_DEPENDENCIES =
matthias_troyer_1_LDFLAGS =
am_matthias_troyer_2_OBJECTS = matthias-troyer-2.$(OBJEXT)
matthias_troyer_2_OBJECTS = $(am_matthias_troyer_2_OBJECTS)
matthias_troyer_2_LDADD = $(LDADD)
matthias_troyer_2_DEPENDENCIES =
matthias_troyer_2_LDFLAGS =
am_mattias_lindstroem_1_OBJECTS = mattias-lindstroem-1.$(OBJEXT)
mattias_lindstroem_1_OBJECTS = $(am_mattias_lindstroem_1_OBJECTS)
mattias_lindstroem_1_LDADD = $(LDADD)
mattias_lindstroem_1_DEPENDENCIES =
mattias_lindstroem_1_LDFLAGS =
am_minmax_OBJECTS = minmax.$(OBJEXT)
minmax_OBJECTS = $(am_minmax_OBJECTS)
minmax_LDADD = $(LDADD)
minmax_DEPENDENCIES =
minmax_LDFLAGS =
am_minsumpow_OBJECTS = minsumpow.$(OBJEXT)
minsumpow_OBJECTS = $(am_minsumpow_OBJECTS)
minsumpow_LDADD = $(LDADD)
minsumpow_DEPENDENCIES =
minsumpow_LDFLAGS =
am_module_OBJECTS = module1.$(OBJEXT) module2.$(OBJEXT)
module_OBJECTS = $(am_module_OBJECTS)
module_LDADD = $(LDADD)
module_DEPENDENCIES =
module_LDFLAGS =
am_newet_OBJECTS = newet.$(OBJEXT)
newet_OBJECTS = $(am_newet_OBJECTS)
newet_LDADD = $(LDADD)
newet_DEPENDENCIES =
newet_LDFLAGS =
am_peter_bienstman_1_OBJECTS = peter-bienstman-1.$(OBJEXT)
peter_bienstman_1_OBJECTS = $(am_peter_bienstman_1_OBJECTS)
peter_bienstman_1_LDADD = $(LDADD)
peter_bienstman_1_DEPENDENCIES =
peter_bienstman_1_LDFLAGS =
am_peter_bienstman_2_OBJECTS = peter-bienstman-2.$(OBJEXT)
peter_bienstman_2_OBJECTS = $(am_peter_bienstman_2_OBJECTS)
peter_bienstman_2_LDADD = $(LDADD)
peter_bienstman_2_DEPENDENCIES =
peter_bienstman_2_LDFLAGS =
am_peter_bienstman_3_OBJECTS = peter-bienstman-3.$(OBJEXT)
peter_bienstman_3_OBJECTS = $(am_peter_bienstman_3_OBJECTS)
peter_bienstman_3_LDADD = $(LDADD)
peter_bienstman_3_DEPENDENCIES =
peter_bienstman_3_LDFLAGS =
am_peter_bienstman_4_OBJECTS = peter-bienstman-4.$(OBJEXT)
peter_bienstman_4_OBJECTS = $(am_peter_bienstman_4_OBJECTS)
peter_bienstman_4_LDADD = $(LDADD)
peter_bienstman_4_DEPENDENCIES =
peter_bienstman_4_LDFLAGS =
am_peter_bienstman_5_OBJECTS = peter-bienstman-5.$(OBJEXT)
peter_bienstman_5_OBJECTS = $(am_peter_bienstman_5_OBJECTS)
peter_bienstman_5_LDADD = $(LDADD)
peter_bienstman_5_DEPENDENCIES =
peter_bienstman_5_LDFLAGS =
am_peter_nordlund_1_OBJECTS = peter-nordlund-1.$(OBJEXT)
peter_nordlund_1_OBJECTS = $(am_peter_nordlund_1_OBJECTS)
peter_nordlund_1_LDADD = $(LDADD)
peter_nordlund_1_DEPENDENCIES =
peter_nordlund_1_LDFLAGS =
am_peter_nordlund_2_OBJECTS = peter-nordlund-2.$(OBJEXT)
peter_nordlund_2_OBJECTS = $(am_peter_nordlund_2_OBJECTS)
peter_nordlund_2_LDADD = $(LDADD)
peter_nordlund_2_DEPENDENCIES =
peter_nordlund_2_LDFLAGS =
am_peter_nordlund_3_OBJECTS = peter-nordlund-3.$(OBJEXT)
peter_nordlund_3_OBJECTS = $(am_peter_nordlund_3_OBJECTS)
peter_nordlund_3_LDADD = $(LDADD)
peter_nordlund_3_DEPENDENCIES =
peter_nordlund_3_LDFLAGS =
am_promote_OBJECTS = promote.$(OBJEXT)
promote_OBJECTS = $(am_promote_OBJECTS)
promote_LDADD = $(LDADD)
promote_DEPENDENCIES =
promote_LDFLAGS =
am_qcd_OBJECTS = qcd.$(OBJEXT)
qcd_OBJECTS = $(am_qcd_OBJECTS)
qcd_LDADD = $(LDADD)
qcd_DEPENDENCIES =
qcd_LDFLAGS =
am_reduce_OBJECTS = reduce.$(OBJEXT)
reduce_OBJECTS = $(am_reduce_OBJECTS)
reduce_LDADD = $(LDADD)
reduce_DEPENDENCIES =
reduce_LDFLAGS =
am_reindex_OBJECTS = reindex.$(OBJEXT)
reindex_OBJECTS = $(am_reindex_OBJECTS)
reindex_LDADD = $(LDADD)
reindex_DEPENDENCIES =
reindex_LDFLAGS =
am_reverse_OBJECTS = reverse.$(OBJEXT)
reverse_OBJECTS = $(am_reverse_OBJECTS)
reverse_LDADD = $(LDADD)
reverse_DEPENDENCIES =
reverse_LDFLAGS =
am_shape_OBJECTS = shape.$(OBJEXT)
shape_OBJECTS = $(am_shape_OBJECTS)
shape_LDADD = $(LDADD)
shape_DEPENDENCIES =
shape_LDFLAGS =
am_shapecheck_OBJECTS = shapecheck.$(OBJEXT)
shapecheck_OBJECTS = $(am_shapecheck_OBJECTS)
shapecheck_LDADD = $(LDADD)
shapecheck_DEPENDENCIES =
shapecheck_LDFLAGS =
am_storage_OBJECTS = storage.$(OBJEXT)
storage_OBJECTS = $(am_storage_OBJECTS)
storage_LDADD = $(LDADD)
storage_DEPENDENCIES =
storage_LDFLAGS =
am_stub_OBJECTS = stub.$(OBJEXT)
stub_OBJECTS = $(am_stub_OBJECTS)
stub_LDADD = $(LDADD)
stub_DEPENDENCIES =
stub_LDFLAGS =
am_theodore_papadopoulo_1_OBJECTS = theodore-papadopoulo-1.$(OBJEXT)
theodore_papadopoulo_1_OBJECTS = $(am_theodore_papadopoulo_1_OBJECTS)
theodore_papadopoulo_1_LDADD = $(LDADD)
theodore_papadopoulo_1_DEPENDENCIES =
theodore_papadopoulo_1_LDFLAGS =
am_tinymat_OBJECTS = tinymat.$(OBJEXT)
tinymat_OBJECTS = $(am_tinymat_OBJECTS)
tinymat_LDADD = $(LDADD)
tinymat_DEPENDENCIES =
tinymat_LDFLAGS =
am_tinyvec_OBJECTS = tinyvec.$(OBJEXT)
tinyvec_OBJECTS = $(am_tinyvec_OBJECTS)
tinyvec_LDADD = $(LDADD)
tinyvec_DEPENDENCIES =
tinyvec_LDFLAGS =
am_transpose_OBJECTS = transpose.$(OBJEXT)
transpose_OBJECTS = $(am_transpose_OBJECTS)
transpose_LDADD = $(LDADD)
transpose_DEPENDENCIES =
transpose_LDFLAGS =
am_troyer_genilloud_OBJECTS = troyer-genilloud.$(OBJEXT)
troyer_genilloud_OBJECTS = $(am_troyer_genilloud_OBJECTS)
troyer_genilloud_LDADD = $(LDADD)
troyer_genilloud_DEPENDENCIES =
troyer_genilloud_LDFLAGS =
am_wei_ku_1_OBJECTS = wei-ku-1.$(OBJEXT)
wei_ku_1_OBJECTS = $(am_wei_ku_1_OBJECTS)
wei_ku_1_LDADD = $(LDADD)
wei_ku_1_DEPENDENCIES =
wei_ku_1_LDFLAGS =
am_where_OBJECTS = where.$(OBJEXT)
where_OBJECTS = $(am_where_OBJECTS)
where_LDADD = $(LDADD)
where_DEPENDENCIES =
where_LDFLAGS =

DEFS = @DEFS@
DEFAULT_INCLUDES =  -I. -I$(srcdir)
CPPFLAGS = @CPPFLAGS@
LIBS = @LIBS@
depcomp =
am__depfiles_maybe =
CXXCOMPILE = $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS)
CXXLD = $(CXX)
CXXLINK = $(CXXLD) $(AM_CXXFLAGS) $(CXXFLAGS) $(AM_LDFLAGS) $(LDFLAGS) \
	-o $@
DIST_SOURCES = $(Adnene_Ben_Abdallah_1_SOURCES) \
	$(Adnene_Ben_Abdallah_2_SOURCES) $(Josef_Wagenhuber_SOURCES) \
	$(Olaf_Ronneberger_1_SOURCES) $(Ulisses_Mello_1_SOURCES) \
	$(arrayresize_SOURCES) $(chris_jeffery_1_SOURCES) \
	$(chris_jeffery_2_SOURCES) $(chris_jeffery_3_SOURCES) \
	$(complex_test_SOURCES) $(constarray_SOURCES) \
	$(contiguous_SOURCES) $(copy_SOURCES) $(ctors_SOURCES) \
	$(derrick_bass_1_SOURCES) $(derrick_bass_3_SOURCES) \
	$(exprctor_SOURCES) $(extract_SOURCES) $(free_SOURCES) \
	$(gary_huber_1_SOURCES) $(initialize_SOURCES) \
	$(interlace_SOURCES) $(iter_SOURCES) $(loop1_SOURCES) \
	$(matthias_troyer_1_SOURCES) $(matthias_troyer_2_SOURCES) \
	$(mattias_lindstroem_1_SOURCES) $(minmax_SOURCES) \
	$(minsumpow_SOURCES) $(module_SOURCES) $(newet_SOURCES) \
	$(peter_bienstman_1_SOURCES) $(peter_bienstman_2_SOURCES) \
	$(peter_bienstman_3_SOURCES) $(peter_bienstman_4_SOURCES) \
	$(peter_bienstman_5_SOURCES) $(peter_nordlund_1_SOURCES) \
	$(peter_nordlund_2_SOURCES) $(peter_nordlund_3_SOURCES) \
	$(promote_SOURCES) $(qcd_SOURCES) $(reduce_SOURCES) \
	$(reindex_SOURCES) $(reverse_SOURCES) $(shape_SOURCES) \
	$(shapecheck_SOURCES) $(storage_SOURCES) $(stub_SOURCES) \
	$(theodore_papadopoulo_1_SOURCES) $(tinymat_SOURCES) \
	$(tinyvec_SOURCES) $(transpose_SOURCES) \
	$(troyer_genilloud_SOURCES) $(wei_ku_1_SOURCES) \
	$(where_SOURCES)
DATA = $(testsuite_DATA)


RECURSIVE_TARGETS = info-recursive dvi-recursive install-info-recursive \
	uninstall-info-recursive all-recursive install-data-recursive \
	install-exec-recursive installdirs-recursive install-recursive \
	uninstall-recursive check-recursive installcheck-recursive
DIST_COMMON = Makefile.am Makefile.in
DIST_SUBDIRS = $(SUBDIRS)
SOURCES = $(Adnene_Ben_Abdallah_1_SOURCES) $(Adnene_Ben_Abdallah_2_SOURCES) $(Josef_Wagenhuber_SOURCES) $(Olaf_Ronneberger_1_SOURCES) $(Ulisses_Mello_1_SOURCES) $(arrayresize_SOURCES) $(chris_jeffery_1_SOURCES) $(chris_jeffery_2_SOURCES) $(chris_jeffery_3_SOURCES) $(complex_test_SOURCES) $(constarray_SOURCES) $(contiguous_SOURCES) $(copy_SOURCES) $(ctors_SOURCES) $(derrick_bass_1_SOURCES) $(derrick_bass_3_SOURCES) $(exprctor_SOURCES) $(extract_SOURCES) $(free_SOURCES) $(gary_huber_1_SOURCES) $(initialize_SOURCES) $(interlace_SOURCES) $(iter_SOURCES) $(loop1_SOURCES) $(matthias_troyer_1_SOURCES) $(matthias_troyer_2_SOURCES) $(mattias_lindstroem_1_SOURCES) $(minmax_SOURCES) $(minsumpow_SOURCES) $(module_SOURCES) $(newet_SOURCES) $(peter_bienstman_1_SOURCES) $(peter_bienstman_2_SOURCES) $(peter_bienstman_3_SOURCES) $(peter_bienstman_4_SOURCES) $(peter_bienstman_5_SOURCES) $(peter_nordlund_1_SOURCES) $(peter_nordlund_2_SOURCES) $(peter_nordlund_3_SOURCES) $(promote_SOURCES) $(qcd_SOURCES) $(reduce_SOURCES) $(reindex_SOURCES) $(reverse_SOURCES) $(shape_SOURCES) $(shapecheck_SOURCES) $(storage_SOURCES) $(stub_SOURCES) $(theodore_papadopoulo_1_SOURCES) $(tinymat_SOURCES) $(tinyvec_SOURCES) $(transpose_SOURCES) $(troyer_genilloud_SOURCES) $(wei_ku_1_SOURCES) $(where_SOURCES)

all: all-recursive

.SUFFIXES:
.SUFFIXES: .cpp .o .obj
$(srcdir)/Makefile.in:  Makefile.am  $(top_srcdir)/configure.in $(ACLOCAL_M4)
	cd $(top_srcdir) && \
	  $(AUTOMAKE) --gnu  --ignore-deps testsuite/Makefile
Makefile:  $(srcdir)/Makefile.in  $(top_builddir)/config.status
	cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)
Adnene-Ben-Abdallah-1$(EXEEXT): $(Adnene_Ben_Abdallah_1_OBJECTS) $(Adnene_Ben_Abdallah_1_DEPENDENCIES) 
	@rm -f Adnene-Ben-Abdallah-1$(EXEEXT)
	$(CXXLINK) $(Adnene_Ben_Abdallah_1_LDFLAGS) $(Adnene_Ben_Abdallah_1_OBJECTS) $(Adnene_Ben_Abdallah_1_LDADD) $(LIBS)
Adnene-Ben-Abdallah-2$(EXEEXT): $(Adnene_Ben_Abdallah_2_OBJECTS) $(Adnene_Ben_Abdallah_2_DEPENDENCIES) 
	@rm -f Adnene-Ben-Abdallah-2$(EXEEXT)
	$(CXXLINK) $(Adnene_Ben_Abdallah_2_LDFLAGS) $(Adnene_Ben_Abdallah_2_OBJECTS) $(Adnene_Ben_Abdallah_2_LDADD) $(LIBS)
Josef-Wagenhuber$(EXEEXT): $(Josef_Wagenhuber_OBJECTS) $(Josef_Wagenhuber_DEPENDENCIES) 
	@rm -f Josef-Wagenhuber$(EXEEXT)
	$(CXXLINK) $(Josef_Wagenhuber_LDFLAGS) $(Josef_Wagenhuber_OBJECTS) $(Josef_Wagenhuber_LDADD) $(LIBS)
Olaf-Ronneberger-1$(EXEEXT): $(Olaf_Ronneberger_1_OBJECTS) $(Olaf_Ronneberger_1_DEPENDENCIES) 
	@rm -f Olaf-Ronneberger-1$(EXEEXT)
	$(CXXLINK) $(Olaf_Ronneberger_1_LDFLAGS) $(Olaf_Ronneberger_1_OBJECTS) $(Olaf_Ronneberger_1_LDADD) $(LIBS)
Ulisses-Mello-1$(EXEEXT): $(Ulisses_Mello_1_OBJECTS) $(Ulisses_Mello_1_DEPENDENCIES) 
	@rm -f Ulisses-Mello-1$(EXEEXT)
	$(CXXLINK) $(Ulisses_Mello_1_LDFLAGS) $(Ulisses_Mello_1_OBJECTS) $(Ulisses_Mello_1_LDADD) $(LIBS)
arrayresize$(EXEEXT): $(arrayresize_OBJECTS) $(arrayresize_DEPENDENCIES) 
	@rm -f arrayresize$(EXEEXT)
	$(CXXLINK) $(arrayresize_LDFLAGS) $(arrayresize_OBJECTS) $(arrayresize_LDADD) $(LIBS)
chris-jeffery-1$(EXEEXT): $(chris_jeffery_1_OBJECTS) $(chris_jeffery_1_DEPENDENCIES) 
	@rm -f chris-jeffery-1$(EXEEXT)
	$(CXXLINK) $(chris_jeffery_1_LDFLAGS) $(chris_jeffery_1_OBJECTS) $(chris_jeffery_1_LDADD) $(LIBS)
chris-jeffery-2$(EXEEXT): $(chris_jeffery_2_OBJECTS) $(chris_jeffery_2_DEPENDENCIES) 
	@rm -f chris-jeffery-2$(EXEEXT)
	$(CXXLINK) $(chris_jeffery_2_LDFLAGS) $(chris_jeffery_2_OBJECTS) $(chris_jeffery_2_LDADD) $(LIBS)
chris-jeffery-3$(EXEEXT): $(chris_jeffery_3_OBJECTS) $(chris_jeffery_3_DEPENDENCIES) 
	@rm -f chris-jeffery-3$(EXEEXT)
	$(CXXLINK) $(chris_jeffery_3_LDFLAGS) $(chris_jeffery_3_OBJECTS) $(chris_jeffery_3_LDADD) $(LIBS)
complex-test$(EXEEXT): $(complex_test_OBJECTS) $(complex_test_DEPENDENCIES) 
	@rm -f complex-test$(EXEEXT)
	$(CXXLINK) $(complex_test_LDFLAGS) $(complex_test_OBJECTS) $(complex_test_LDADD) $(LIBS)
constarray$(EXEEXT): $(constarray_OBJECTS) $(constarray_DEPENDENCIES) 
	@rm -f constarray$(EXEEXT)
	$(CXXLINK) $(constarray_LDFLAGS) $(constarray_OBJECTS) $(constarray_LDADD) $(LIBS)
contiguous$(EXEEXT): $(contiguous_OBJECTS) $(contiguous_DEPENDENCIES) 
	@rm -f contiguous$(EXEEXT)
	$(CXXLINK) $(contiguous_LDFLAGS) $(contiguous_OBJECTS) $(contiguous_LDADD) $(LIBS)
copy$(EXEEXT): $(copy_OBJECTS) $(copy_DEPENDENCIES) 
	@rm -f copy$(EXEEXT)
	$(CXXLINK) $(copy_LDFLAGS) $(copy_OBJECTS) $(copy_LDADD) $(LIBS)
ctors$(EXEEXT): $(ctors_OBJECTS) $(ctors_DEPENDENCIES) 
	@rm -f ctors$(EXEEXT)
	$(CXXLINK) $(ctors_LDFLAGS) $(ctors_OBJECTS) $(ctors_LDADD) $(LIBS)
derrick-bass-1$(EXEEXT): $(derrick_bass_1_OBJECTS) $(derrick_bass_1_DEPENDENCIES) 
	@rm -f derrick-bass-1$(EXEEXT)
	$(CXXLINK) $(derrick_bass_1_LDFLAGS) $(derrick_bass_1_OBJECTS) $(derrick_bass_1_LDADD) $(LIBS)
derrick-bass-3$(EXEEXT): $(derrick_bass_3_OBJECTS) $(derrick_bass_3_DEPENDENCIES) 
	@rm -f derrick-bass-3$(EXEEXT)
	$(CXXLINK) $(derrick_bass_3_LDFLAGS) $(derrick_bass_3_OBJECTS) $(derrick_bass_3_LDADD) $(LIBS)
exprctor$(EXEEXT): $(exprctor_OBJECTS) $(exprctor_DEPENDENCIES) 
	@rm -f exprctor$(EXEEXT)
	$(CXXLINK) $(exprctor_LDFLAGS) $(exprctor_OBJECTS) $(exprctor_LDADD) $(LIBS)
extract$(EXEEXT): $(extract_OBJECTS) $(extract_DEPENDENCIES) 
	@rm -f extract$(EXEEXT)
	$(CXXLINK) $(extract_LDFLAGS) $(extract_OBJECTS) $(extract_LDADD) $(LIBS)
free$(EXEEXT): $(free_OBJECTS) $(free_DEPENDENCIES) 
	@rm -f free$(EXEEXT)
	$(CXXLINK) $(free_LDFLAGS) $(free_OBJECTS) $(free_LDADD) $(LIBS)
gary-huber-1$(EXEEXT): $(gary_huber_1_OBJECTS) $(gary_huber_1_DEPENDENCIES) 
	@rm -f gary-huber-1$(EXEEXT)
	$(CXXLINK) $(gary_huber_1_LDFLAGS) $(gary_huber_1_OBJECTS) $(gary_huber_1_LDADD) $(LIBS)
initialize$(EXEEXT): $(initialize_OBJECTS) $(initialize_DEPENDENCIES) 
	@rm -f initialize$(EXEEXT)
	$(CXXLINK) $(initialize_LDFLAGS) $(initialize_OBJECTS) $(initialize_LDADD) $(LIBS)
interlace$(EXEEXT): $(interlace_OBJECTS) $(interlace_DEPENDENCIES) 
	@rm -f interlace$(EXEEXT)
	$(CXXLINK) $(interlace_LDFLAGS) $(interlace_OBJECTS) $(interlace_LDADD) $(LIBS)
iter$(EXEEXT): $(iter_OBJECTS) $(iter_DEPENDENCIES) 
	@rm -f iter$(EXEEXT)
	$(CXXLINK) $(iter_LDFLAGS) $(iter_OBJECTS) $(iter_LDADD) $(LIBS)
loop1$(EXEEXT): $(loop1_OBJECTS) $(loop1_DEPENDENCIES) 
	@rm -f loop1$(EXEEXT)
	$(CXXLINK) $(loop1_LDFLAGS) $(loop1_OBJECTS) $(loop1_LDADD) $(LIBS)
matthias-troyer-1$(EXEEXT): $(matthias_troyer_1_OBJECTS) $(matthias_troyer_1_DEPENDENCIES) 
	@rm -f matthias-troyer-1$(EXEEXT)
	$(CXXLINK) $(matthias_troyer_1_LDFLAGS) $(matthias_troyer_1_OBJECTS) $(matthias_troyer_1_LDADD) $(LIBS)
matthias-troyer-2$(EXEEXT): $(matthias_troyer_2_OBJECTS) $(matthias_troyer_2_DEPENDENCIES) 
	@rm -f matthias-troyer-2$(EXEEXT)
	$(CXXLINK) $(matthias_troyer_2_LDFLAGS) $(matthias_troyer_2_OBJECTS) $(matthias_troyer_2_LDADD) $(LIBS)
mattias-lindstroem-1$(EXEEXT): $(mattias_lindstroem_1_OBJECTS) $(mattias_lindstroem_1_DEPENDENCIES) 
	@rm -f mattias-lindstroem-1$(EXEEXT)
	$(CXXLINK) $(mattias_lindstroem_1_LDFLAGS) $(mattias_lindstroem_1_OBJECTS) $(mattias_lindstroem_1_LDADD) $(LIBS)
minmax$(EXEEXT): $(minmax_OBJECTS) $(minmax_DEPENDENCIES) 
	@rm -f minmax$(EXEEXT)
	$(CXXLINK) $(minmax_LDFLAGS) $(minmax_OBJECTS) $(minmax_LDADD) $(LIBS)
minsumpow$(EXEEXT): $(minsumpow_OBJECTS) $(minsumpow_DEPENDENCIES) 
	@rm -f minsumpow$(EXEEXT)
	$(CXXLINK) $(minsumpow_LDFLAGS) $(minsumpow_OBJECTS) $(minsumpow_LDADD) $(LIBS)
module$(EXEEXT): $(module_OBJECTS) $(module_DEPENDENCIES) 
	@rm -f module$(EXEEXT)
	$(CXXLINK) $(module_LDFLAGS) $(module_OBJECTS) $(module_LDADD) $(LIBS)
newet$(EXEEXT): $(newet_OBJECTS) $(newet_DEPENDENCIES) 
	@rm -f newet$(EXEEXT)
	$(CXXLINK) $(newet_LDFLAGS) $(newet_OBJECTS) $(newet_LDADD) $(LIBS)
peter-bienstman-1$(EXEEXT): $(peter_bienstman_1_OBJECTS) $(peter_bienstman_1_DEPENDENCIES) 
	@rm -f peter-bienstman-1$(EXEEXT)
	$(CXXLINK) $(peter_bienstman_1_LDFLAGS) $(peter_bienstman_1_OBJECTS) $(peter_bienstman_1_LDADD) $(LIBS)
peter-bienstman-2$(EXEEXT): $(peter_bienstman_2_OBJECTS) $(peter_bienstman_2_DEPENDENCIES) 
	@rm -f peter-bienstman-2$(EXEEXT)
	$(CXXLINK) $(peter_bienstman_2_LDFLAGS) $(peter_bienstman_2_OBJECTS) $(peter_bienstman_2_LDADD) $(LIBS)
peter-bienstman-3$(EXEEXT): $(peter_bienstman_3_OBJECTS) $(peter_bienstman_3_DEPENDENCIES) 
	@rm -f peter-bienstman-3$(EXEEXT)
	$(CXXLINK) $(peter_bienstman_3_LDFLAGS) $(peter_bienstman_3_OBJECTS) $(peter_bienstman_3_LDADD) $(LIBS)
peter-bienstman-4$(EXEEXT): $(peter_bienstman_4_OBJECTS) $(peter_bienstman_4_DEPENDENCIES) 
	@rm -f peter-bienstman-4$(EXEEXT)
	$(CXXLINK) $(peter_bienstman_4_LDFLAGS) $(peter_bienstman_4_OBJECTS) $(peter_bienstman_4_LDADD) $(LIBS)
peter-bienstman-5$(EXEEXT): $(peter_bienstman_5_OBJECTS) $(peter_bienstman_5_DEPENDENCIES) 
	@rm -f peter-bienstman-5$(EXEEXT)
	$(CXXLINK) $(peter_bienstman_5_LDFLAGS) $(peter_bienstman_5_OBJECTS) $(peter_bienstman_5_LDADD) $(LIBS)
peter-nordlund-1$(EXEEXT): $(peter_nordlund_1_OBJECTS) $(peter_nordlund_1_DEPENDENCIES) 
	@rm -f peter-nordlund-1$(EXEEXT)
	$(CXXLINK) $(peter_nordlund_1_LDFLAGS) $(peter_nordlund_1_OBJECTS) $(peter_nordlund_1_LDADD) $(LIBS)
peter-nordlund-2$(EXEEXT): $(peter_nordlund_2_OBJECTS) $(peter_nordlund_2_DEPENDENCIES) 
	@rm -f peter-nordlund-2$(EXEEXT)
	$(CXXLINK) $(peter_nordlund_2_LDFLAGS) $(peter_nordlund_2_OBJECTS) $(peter_nordlund_2_LDADD) $(LIBS)
peter-nordlund-3$(EXEEXT): $(peter_nordlund_3_OBJECTS) $(peter_nordlund_3_DEPENDENCIES) 
	@rm -f peter-nordlund-3$(EXEEXT)
	$(CXXLINK) $(peter_nordlund_3_LDFLAGS) $(peter_nordlund_3_OBJECTS) $(peter_nordlund_3_LDADD) $(LIBS)
promote$(EXEEXT): $(promote_OBJECTS) $(promote_DEPENDENCIES) 
	@rm -f promote$(EXEEXT)
	$(CXXLINK) $(promote_LDFLAGS) $(promote_OBJECTS) $(promote_LDADD) $(LIBS)
qcd$(EXEEXT): $(qcd_OBJECTS) $(qcd_DEPENDENCIES) 
	@rm -f qcd$(EXEEXT)
	$(CXXLINK) $(qcd_LDFLAGS) $(qcd_OBJECTS) $(qcd_LDADD) $(LIBS)
reduce$(EXEEXT): $(reduce_OBJECTS) $(reduce_DEPENDENCIES) 
	@rm -f reduce$(EXEEXT)
	$(CXXLINK) $(reduce_LDFLAGS) $(reduce_OBJECTS) $(reduce_LDADD) $(LIBS)
reindex$(EXEEXT): $(reindex_OBJECTS) $(reindex_DEPENDENCIES) 
	@rm -f reindex$(EXEEXT)
	$(CXXLINK) $(reindex_LDFLAGS) $(reindex_OBJECTS) $(reindex_LDADD) $(LIBS)
reverse$(EXEEXT): $(reverse_OBJECTS) $(reverse_DEPENDENCIES) 
	@rm -f reverse$(EXEEXT)
	$(CXXLINK) $(reverse_LDFLAGS) $(reverse_OBJECTS) $(reverse_LDADD) $(LIBS)
shape$(EXEEXT): $(shape_OBJECTS) $(shape_DEPENDENCIES) 
	@rm -f shape$(EXEEXT)
	$(CXXLINK) $(shape_LDFLAGS) $(shape_OBJECTS) $(shape_LDADD) $(LIBS)
shapecheck$(EXEEXT): $(shapecheck_OBJECTS) $(shapecheck_DEPENDENCIES) 
	@rm -f shapecheck$(EXEEXT)
	$(CXXLINK) $(shapecheck_LDFLAGS) $(shapecheck_OBJECTS) $(shapecheck_LDADD) $(LIBS)
storage$(EXEEXT): $(storage_OBJECTS) $(storage_DEPENDENCIES) 
	@rm -f storage$(EXEEXT)
	$(CXXLINK) $(storage_LDFLAGS) $(storage_OBJECTS) $(storage_LDADD) $(LIBS)
stub$(EXEEXT): $(stub_OBJECTS) $(stub_DEPENDENCIES) 
	@rm -f stub$(EXEEXT)
	$(CXXLINK) $(stub_LDFLAGS) $(stub_OBJECTS) $(stub_LDADD) $(LIBS)
theodore-papadopoulo-1$(EXEEXT): $(theodore_papadopoulo_1_OBJECTS) $(theodore_papadopoulo_1_DEPENDENCIES) 
	@rm -f theodore-papadopoulo-1$(EXEEXT)
	$(CXXLINK) $(theodore_papadopoulo_1_LDFLAGS) $(theodore_papadopoulo_1_OBJECTS) $(theodore_papadopoulo_1_LDADD) $(LIBS)
tinymat$(EXEEXT): $(tinymat_OBJECTS) $(tinymat_DEPENDENCIES) 
	@rm -f tinymat$(EXEEXT)
	$(CXXLINK) $(tinymat_LDFLAGS) $(tinymat_OBJECTS) $(tinymat_LDADD) $(LIBS)
tinyvec$(EXEEXT): $(tinyvec_OBJECTS) $(tinyvec_DEPENDENCIES) 
	@rm -f tinyvec$(EXEEXT)
	$(CXXLINK) $(tinyvec_LDFLAGS) $(tinyvec_OBJECTS) $(tinyvec_LDADD) $(LIBS)
transpose$(EXEEXT): $(transpose_OBJECTS) $(transpose_DEPENDENCIES) 
	@rm -f transpose$(EXEEXT)
	$(CXXLINK) $(transpose_LDFLAGS) $(transpose_OBJECTS) $(transpose_LDADD) $(LIBS)
troyer-genilloud$(EXEEXT): $(troyer_genilloud_OBJECTS) $(troyer_genilloud_DEPENDENCIES) 
	@rm -f troyer-genilloud$(EXEEXT)
	$(CXXLINK) $(troyer_genilloud_LDFLAGS) $(troyer_genilloud_OBJECTS) $(troyer_genilloud_LDADD) $(LIBS)
wei-ku-1$(EXEEXT): $(wei_ku_1_OBJECTS) $(wei_ku_1_DEPENDENCIES) 
	@rm -f wei-ku-1$(EXEEXT)
	$(CXXLINK) $(wei_ku_1_LDFLAGS) $(wei_ku_1_OBJECTS) $(wei_ku_1_LDADD) $(LIBS)
where$(EXEEXT): $(where_OBJECTS) $(where_DEPENDENCIES) 
	@rm -f where$(EXEEXT)
	$(CXXLINK) $(where_LDFLAGS) $(where_OBJECTS) $(where_LDADD) $(LIBS)

mostlyclean-compile:
	-rm -f *.$(OBJEXT) core *.core

distclean-compile:
	-rm -f *.tab.c

.cpp.o:
	$(CXXCOMPILE) -c -o $@ `test -f '$<' || echo '$(srcdir)/'`$<

.cpp.obj:
	$(CXXCOMPILE) -c -o $@ `cygpath -w $<`
uninstall-info-am:
testsuiteDATA_INSTALL = $(INSTALL_DATA)
install-testsuiteDATA: $(testsuite_DATA)
	@$(NORMAL_INSTALL)
	$(mkinstalldirs) $(DESTDIR)$(testsuitedir)
	@list='$(testsuite_DATA)'; for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  f="`echo $$p | sed -e 's|^.*/||'`"; \
	  echo " $(testsuiteDATA_INSTALL) $$d$$p $(DESTDIR)$(testsuitedir)/$$f"; \
	  $(testsuiteDATA_INSTALL) $$d$$p $(DESTDIR)$(testsuitedir)/$$f; \
	done

uninstall-testsuiteDATA:
	@$(NORMAL_UNINSTALL)
	@list='$(testsuite_DATA)'; for p in $$list; do \
	  f="`echo $$p | sed -e 's|^.*/||'`"; \
	  echo " rm -f $(DESTDIR)$(testsuitedir)/$$f"; \
	  rm -f $(DESTDIR)$(testsuitedir)/$$f; \
	done

# This directory's subdirectories are mostly independent; you can cd
# into them and run `make' without going through this Makefile.
# To change the values of `make' variables: instead of editing Makefiles,
# (1) if the variable is set in `config.status', edit `config.status'
#     (which will cause the Makefiles to be regenerated when you run `make');
# (2) otherwise, pass the desired values on the `make' command line.
$(RECURSIVE_TARGETS):
	@set fnord $$MAKEFLAGS; amf=$$2; \
	dot_seen=no; \
	target=`echo $@ | sed s/-recursive//`; \
	list='$(SUBDIRS)'; for subdir in $$list; do \
	  echo "Making $$target in $$subdir"; \
	  if test "$$subdir" = "."; then \
	    dot_seen=yes; \
	    local_target="$$target-am"; \
	  else \
	    local_target="$$target"; \
	  fi; \
	  (cd $$subdir && $(MAKE) $(AM_MAKEFLAGS) $$local_target) \
	   || case "$$amf" in *=*) exit 1;; *k*) fail=yes;; *) exit 1;; esac; \
	done; \
	if test "$$dot_seen" = "no"; then \
	  $(MAKE) $(AM_MAKEFLAGS) "$$target-am" || exit 1; \
	fi; test -z "$$fail"

mostlyclean-recursive clean-recursive distclean-recursive \
maintainer-clean-recursive:
	@set fnord $$MAKEFLAGS; amf=$$2; \
	dot_seen=no; \
	case "$@" in \
	  distclean-* | maintainer-clean-*) list='$(DIST_SUBDIRS)' ;; \
	  *) list='$(SUBDIRS)' ;; \
	esac; \
	rev=''; for subdir in $$list; do \
	  if test "$$subdir" = "."; then :; else \
	    rev="$$subdir $$rev"; \
	  fi; \
	done; \
	rev="$$rev ."; \
	target=`echo $@ | sed s/-recursive//`; \
	for subdir in $$rev; do \
	  echo "Making $$target in $$subdir"; \
	  if test "$$subdir" = "."; then \
	    local_target="$$target-am"; \
	  else \
	    local_target="$$target"; \
	  fi; \
	  (cd $$subdir && $(MAKE) $(AM_MAKEFLAGS) $$local_target) \
	   || case "$$amf" in *=*) exit 1;; *k*) fail=yes;; *) exit 1;; esac; \
	done && test -z "$$fail"
tags-recursive:
	list='$(SUBDIRS)'; for subdir in $$list; do \
	  test "$$subdir" = . || (cd $$subdir && $(MAKE) $(AM_MAKEFLAGS) tags); \
	done

ETAGS = etags
ETAGSFLAGS =

tags: TAGS

ID: $(HEADERS) $(SOURCES) $(LISP) $(TAGS_FILES)
	list='$(SOURCES) $(HEADERS) $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	mkid -fID $$unique

TAGS: tags-recursive $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	tags=; \
	here=`pwd`; \
	list='$(SUBDIRS)'; for subdir in $$list; do \
	  if test "$$subdir" = .; then :; else \
	    test -f $$subdir/TAGS && tags="$$tags -i $$here/$$subdir/TAGS"; \
	  fi; \
	done; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	test -z "$(ETAGS_ARGS)$$tags$$unique" \
	  || $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	     $$tags $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && cd $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) $$here

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)

top_distdir = ..
distdir = $(top_distdir)/$(PACKAGE)-$(VERSION)

distdir: $(DISTFILES)
	@for file in $(DISTFILES); do \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  dir=`echo "$$file" | sed -e 's,/[^/]*$$,,'`; \
	  if test "$$dir" != "$$file" && test "$$dir" != "."; then \
	    dir="/$$dir"; \
	    $(mkinstalldirs) "$(distdir)$$dir"; \
	  else \
	    dir=''; \
	  fi; \
	  if test -d $$d/$$file; then \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -pR $(srcdir)/$$file $(distdir)$$dir || exit 1; \
	    fi; \
	    cp -pR $$d/$$file $(distdir)$$dir || exit 1; \
	  else \
	    test -f $(distdir)/$$file \
	    || cp -p $$d/$$file $(distdir)/$$file \
	    || exit 1; \
	  fi; \
	done
	list='$(SUBDIRS)'; for subdir in $$list; do \
	  if test "$$subdir" = .; then :; else \
	    test -d $(distdir)/$$subdir \
	    || mkdir $(distdir)/$$subdir \
	    || exit 1; \
	    (cd $$subdir && \
	      $(MAKE) $(AM_MAKEFLAGS) \
	        top_distdir="$(top_distdir)" \
	        distdir=../$(distdir)/$$subdir \
	        distdir) \
	      || exit 1; \
	  fi; \
	done
check-am: all-am
check: check-recursive
all-am: Makefile $(DATA)
installdirs: installdirs-recursive
installdirs-am:
	$(mkinstalldirs) $(DESTDIR)$(testsuitedir)

install: install-recursive
install-exec: install-exec-recursive
install-data: install-data-recursive
uninstall: uninstall-recursive

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-recursive
install-strip:
	$(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	  INSTALL_STRIP_FLAG=-s \
	  `test -z '$(STRIP)' || \
	    echo "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'"` install
mostlyclean-generic:

clean-generic:

distclean-generic:
	-rm -f Makefile $(CONFIG_CLEAN_FILES) stamp-h stamp-h[0-9]*

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
clean: clean-recursive

clean-am: clean-generic clean-local mostlyclean-am

distclean: distclean-recursive

distclean-am: clean-am distclean-compile distclean-generic \
	distclean-tags

dvi: dvi-recursive

dvi-am:

info: info-recursive

info-am:

install-data-am: install-testsuiteDATA

install-exec-am:

install-info: install-info-recursive

install-man:

installcheck-am:

maintainer-clean: maintainer-clean-recursive

maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-recursive

mostlyclean-am: mostlyclean-compile mostlyclean-generic

uninstall-am: uninstall-info-am uninstall-testsuiteDATA

uninstall-info: uninstall-info-recursive

.PHONY: $(RECURSIVE_TARGETS) GTAGS all all-am check check-am clean \
	clean-generic clean-local clean-recursive distclean \
	distclean-compile distclean-generic distclean-recursive \
	distclean-tags distdir dvi dvi-am dvi-recursive info info-am \
	info-recursive install install-am install-data install-data-am \
	install-data-recursive install-exec install-exec-am \
	install-exec-recursive install-info install-info-am \
	install-info-recursive install-man install-recursive \
	install-strip install-testsuiteDATA installcheck \
	installcheck-am installdirs installdirs-am \
	installdirs-recursive maintainer-clean maintainer-clean-generic \
	maintainer-clean-recursive mostlyclean mostlyclean-compile \
	mostlyclean-generic mostlyclean-recursive tags tags-recursive \
	uninstall uninstall-am uninstall-info-am \
	uninstall-info-recursive uninstall-recursive \
	uninstall-testsuiteDATA


check-testsuite:  $(EXTRA_PROGRAMS)
	@echo Running test suite...
	@for prog in $(EXTRA_PROGRAMS) ; do \
		echo $$prog && (./$$prog > /dev/null 2>&1) || exit 1; \
		done
	@echo All tests passed.

clean-local:
	-rm -rf cxx_repository $(EXTRA_PROGRAMS)
# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
