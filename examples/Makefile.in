# Makefile.in generated by automake 1.6.2 from Makefile.am.
# @configure_input@

# Copyright 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002
# Free Software Foundation, Inc.
# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.

@SET_MAKE@

#
# Written by Patrick Guio <patrick.guio@fys.uio.no>
#
SHELL = @SHELL@

srcdir = @srcdir@
top_srcdir = @top_srcdir@
VPATH = @srcdir@
prefix = @prefix@
exec_prefix = @exec_prefix@

bindir = @bindir@
sbindir = @sbindir@
libexecdir = @libexecdir@
datadir = @datadir@
sysconfdir = @sysconfdir@
sharedstatedir = @sharedstatedir@
localstatedir = @localstatedir@
libdir = @libdir@
infodir = @infodir@
mandir = @mandir@
includedir = @includedir@
oldincludedir = /usr/include
pkgdatadir = $(datadir)/@PACKAGE@
pkglibdir = $(libdir)/@PACKAGE@
pkgincludedir = $(includedir)/@PACKAGE@
top_builddir = ..

ACLOCAL = @ACLOCAL@
AUTOCONF = @AUTOCONF@
AUTOMAKE = @AUTOMAKE@
AUTOHEADER = @AUTOHEADER@

am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
INSTALL = @INSTALL@
INSTALL_PROGRAM = @INSTALL_PROGRAM@
INSTALL_DATA = @INSTALL_DATA@
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_SCRIPT = @INSTALL_SCRIPT@
INSTALL_HEADER = $(INSTALL_DATA)
transform = @program_transform_name@
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :

EXEEXT = @EXEEXT@
OBJEXT = @OBJEXT@
PATH_SEPARATOR = @PATH_SEPARATOR@
AMTAR = @AMTAR@
AR = @AR@
AR_FLAGS = @AR_FLAGS@
AWK = @AWK@
BLASLIB = @BLASLIB@
CC = @CC@
CPP = @CPP@
CXX = @CXX@
CXXF90FLAG = @CXXF90FLAG@
CXXFFLAGS = @CXXFFLAGS@
CXXFLAGS = @CXXFLAGS@
CXX_DEBUG_FLAGS = @CXX_DEBUG_FLAGS@
CXX_LIBS = @CXX_LIBS@
CXX_OPTIMIZE_FLAGS = @CXX_OPTIMIZE_FLAGS@
DEPDIR = @DEPDIR@
F77 = @F77@
F77_OPTIMIZE_FLAGS = @F77_OPTIMIZE_FLAGS@
F90 = @F90@
F90_OPTIMIZE_FLAGS = @F90_OPTIMIZE_FLAGS@
FFLAGS = @FFLAGS@
FORTLIBS = @FORTLIBS@
INSTALL_STRIP_PROGRAM = @INSTALL_STRIP_PROGRAM@
LDFLAGS = @LDFLAGS@
MAINT = @MAINT@
PACKAGE = @PACKAGE@
RANLIB = @RANLIB@
STRIP = @STRIP@
VERSION = @VERSION@
am__include = @am__include@
am__quote = @am__quote@
install_sh = @install_sh@

EXTRA_DIST = stencil4.f profile.cpp tiny2.cpp tiny3.cpp

INCLUDES = -I$(top_srcdir) -I$(top_builddir)
LDADD = -L$(top_builddir)/lib -lblitz

examplesdir = $(prefix)/examples
examples_DATA = array.cpp cartesian.cpp cast.cpp cfd.cpp complex-test.cpp \
convolve.cpp curldiv.cpp deriv.cpp diff.cpp erf.cpp fixed.cpp indirect.cpp \
io.cpp iter.cpp matmult.cpp nested.cpp numinquire.cpp outer.cpp pauli.cpp \
pick.cpp polymorph.cpp prettyprint.cpp profile.cpp qcd.cpp rand2.cpp \
random.cpp rangexpr.cpp reduce.cpp simple.cpp slicing.cpp stencil.cpp \
stencil2.cpp stencil3.cpp stencilet.cpp storage.cpp tiny.cpp tiny2.cpp \
tiny3.cpp transform.cpp useret.cpp where.cpp whitt.cpp Makefile


EXTRA_PROGRAMS = array cartesian cast cfd complex-test convolve curldiv \
deriv diff erf fixed indirect io iter matmult nested numinquire outer pauli \
pick polymorph prettyprint qcd rand2 random rangexpr reduce simple \
slicing stencil2 stencil3 stencil stencilet storage tiny \
transform useret where whitt 


array_SOURCES = array.cpp
cartesian_SOURCES = cartesian.cpp
cast_SOURCES = cast.cpp
cfd_SOURCES = cfd.cpp
complex_test_SOURCES = complex-test.cpp
convolve_SOURCES = convolve.cpp
curldiv_SOURCES = curldiv.cpp
deriv_SOURCES = deriv.cpp
diff_SOURCES = diff.cpp
erf_SOURCES = erf.cpp
fixed_SOURCES = fixed.cpp
indirect_SOURCES = indirect.cpp
io_SOURCES = io.cpp
iter_SOURCES = iter.cpp
matmult_SOURCES = matmult.cpp
nested_SOURCES = nested.cpp
numinquire_SOURCES = numinquire.cpp
outer_SOURCES = outer.cpp
pauli_SOURCES = pauli.cpp
pick_SOURCES = pick.cpp
polymorph_SOURCES = polymorph.cpp
prettyprint_SOURCES = prettyprint.cpp
#profile_SOURCES = profile.cpp
qcd_SOURCES = qcd.cpp
rand2_SOURCES = rand2.cpp
random_SOURCES = random.cpp
rangexpr_SOURCES = rangexpr.cpp
reduce_SOURCES = reduce.cpp
simple_SOURCES = simple.cpp
slicing_SOURCES = slicing.cpp
stencil2_SOURCES = stencil2.cpp
stencil3_SOURCES = stencil3.cpp
stencil_SOURCES = stencil.cpp
stencilet_SOURCES = stencilet.cpp
storage_SOURCES = storage.cpp
#tiny2_SOURCES = tiny2.cpp
#tiny3_SOURCES = tiny3.cpp
tiny_SOURCES = tiny.cpp
transform_SOURCES = transform.cpp
useret_SOURCES = useret.cpp
where_SOURCES = where.cpp
whitt_SOURCES = whitt.cpp
subdir = examples
mkinstalldirs = $(SHELL) $(top_srcdir)/mkinstalldirs
CONFIG_CLEAN_FILES =
EXTRA_PROGRAMS = array$(EXEEXT) cartesian$(EXEEXT) cast$(EXEEXT) \
	cfd$(EXEEXT) complex-test$(EXEEXT) convolve$(EXEEXT) \
	curldiv$(EXEEXT) deriv$(EXEEXT) diff$(EXEEXT) erf$(EXEEXT) \
	fixed$(EXEEXT) indirect$(EXEEXT) io$(EXEEXT) iter$(EXEEXT) \
	matmult$(EXEEXT) nested$(EXEEXT) numinquire$(EXEEXT) \
	outer$(EXEEXT) pauli$(EXEEXT) pick$(EXEEXT) polymorph$(EXEEXT) \
	prettyprint$(EXEEXT) qcd$(EXEEXT) rand2$(EXEEXT) \
	random$(EXEEXT) rangexpr$(EXEEXT) reduce$(EXEEXT) \
	simple$(EXEEXT) slicing$(EXEEXT) stencil2$(EXEEXT) \
	stencil3$(EXEEXT) stencil$(EXEEXT) stencilet$(EXEEXT) \
	storage$(EXEEXT) tiny$(EXEEXT) transform$(EXEEXT) \
	useret$(EXEEXT) where$(EXEEXT) whitt$(EXEEXT)
am_array_OBJECTS = array.$(OBJEXT)
array_OBJECTS = $(am_array_OBJECTS)
array_LDADD = $(LDADD)
array_DEPENDENCIES =
array_LDFLAGS =
am_cartesian_OBJECTS = cartesian.$(OBJEXT)
cartesian_OBJECTS = $(am_cartesian_OBJECTS)
cartesian_LDADD = $(LDADD)
cartesian_DEPENDENCIES =
cartesian_LDFLAGS =
am_cast_OBJECTS = cast.$(OBJEXT)
cast_OBJECTS = $(am_cast_OBJECTS)
cast_LDADD = $(LDADD)
cast_DEPENDENCIES =
cast_LDFLAGS =
am_cfd_OBJECTS = cfd.$(OBJEXT)
cfd_OBJECTS = $(am_cfd_OBJECTS)
cfd_LDADD = $(LDADD)
cfd_DEPENDENCIES =
cfd_LDFLAGS =
am_complex_test_OBJECTS = complex-test.$(OBJEXT)
complex_test_OBJECTS = $(am_complex_test_OBJECTS)
complex_test_LDADD = $(LDADD)
complex_test_DEPENDENCIES =
complex_test_LDFLAGS =
am_convolve_OBJECTS = convolve.$(OBJEXT)
convolve_OBJECTS = $(am_convolve_OBJECTS)
convolve_LDADD = $(LDADD)
convolve_DEPENDENCIES =
convolve_LDFLAGS =
am_curldiv_OBJECTS = curldiv.$(OBJEXT)
curldiv_OBJECTS = $(am_curldiv_OBJECTS)
curldiv_LDADD = $(LDADD)
curldiv_DEPENDENCIES =
curldiv_LDFLAGS =
am_deriv_OBJECTS = deriv.$(OBJEXT)
deriv_OBJECTS = $(am_deriv_OBJECTS)
deriv_LDADD = $(LDADD)
deriv_DEPENDENCIES =
deriv_LDFLAGS =
am_diff_OBJECTS = diff.$(OBJEXT)
diff_OBJECTS = $(am_diff_OBJECTS)
diff_LDADD = $(LDADD)
diff_DEPENDENCIES =
diff_LDFLAGS =
am_erf_OBJECTS = erf.$(OBJEXT)
erf_OBJECTS = $(am_erf_OBJECTS)
erf_LDADD = $(LDADD)
erf_DEPENDENCIES =
erf_LDFLAGS =
am_fixed_OBJECTS = fixed.$(OBJEXT)
fixed_OBJECTS = $(am_fixed_OBJECTS)
fixed_LDADD = $(LDADD)
fixed_DEPENDENCIES =
fixed_LDFLAGS =
am_indirect_OBJECTS = indirect.$(OBJEXT)
indirect_OBJECTS = $(am_indirect_OBJECTS)
indirect_LDADD = $(LDADD)
indirect_DEPENDENCIES =
indirect_LDFLAGS =
am_io_OBJECTS = io.$(OBJEXT)
io_OBJECTS = $(am_io_OBJECTS)
io_LDADD = $(LDADD)
io_DEPENDENCIES =
io_LDFLAGS =
am_iter_OBJECTS = iter.$(OBJEXT)
iter_OBJECTS = $(am_iter_OBJECTS)
iter_LDADD = $(LDADD)
iter_DEPENDENCIES =
iter_LDFLAGS =
am_matmult_OBJECTS = matmult.$(OBJEXT)
matmult_OBJECTS = $(am_matmult_OBJECTS)
matmult_LDADD = $(LDADD)
matmult_DEPENDENCIES =
matmult_LDFLAGS =
am_nested_OBJECTS = nested.$(OBJEXT)
nested_OBJECTS = $(am_nested_OBJECTS)
nested_LDADD = $(LDADD)
nested_DEPENDENCIES =
nested_LDFLAGS =
am_numinquire_OBJECTS = numinquire.$(OBJEXT)
numinquire_OBJECTS = $(am_numinquire_OBJECTS)
numinquire_LDADD = $(LDADD)
numinquire_DEPENDENCIES =
numinquire_LDFLAGS =
am_outer_OBJECTS = outer.$(OBJEXT)
outer_OBJECTS = $(am_outer_OBJECTS)
outer_LDADD = $(LDADD)
outer_DEPENDENCIES =
outer_LDFLAGS =
am_pauli_OBJECTS = pauli.$(OBJEXT)
pauli_OBJECTS = $(am_pauli_OBJECTS)
pauli_LDADD = $(LDADD)
pauli_DEPENDENCIES =
pauli_LDFLAGS =
am_pick_OBJECTS = pick.$(OBJEXT)
pick_OBJECTS = $(am_pick_OBJECTS)
pick_LDADD = $(LDADD)
pick_DEPENDENCIES =
pick_LDFLAGS =
am_polymorph_OBJECTS = polymorph.$(OBJEXT)
polymorph_OBJECTS = $(am_polymorph_OBJECTS)
polymorph_LDADD = $(LDADD)
polymorph_DEPENDENCIES =
polymorph_LDFLAGS =
am_prettyprint_OBJECTS = prettyprint.$(OBJEXT)
prettyprint_OBJECTS = $(am_prettyprint_OBJECTS)
prettyprint_LDADD = $(LDADD)
prettyprint_DEPENDENCIES =
prettyprint_LDFLAGS =
am_qcd_OBJECTS = qcd.$(OBJEXT)
qcd_OBJECTS = $(am_qcd_OBJECTS)
qcd_LDADD = $(LDADD)
qcd_DEPENDENCIES =
qcd_LDFLAGS =
am_rand2_OBJECTS = rand2.$(OBJEXT)
rand2_OBJECTS = $(am_rand2_OBJECTS)
rand2_LDADD = $(LDADD)
rand2_DEPENDENCIES =
rand2_LDFLAGS =
am_random_OBJECTS = random.$(OBJEXT)
random_OBJECTS = $(am_random_OBJECTS)
random_LDADD = $(LDADD)
random_DEPENDENCIES =
random_LDFLAGS =
am_rangexpr_OBJECTS = rangexpr.$(OBJEXT)
rangexpr_OBJECTS = $(am_rangexpr_OBJECTS)
rangexpr_LDADD = $(LDADD)
rangexpr_DEPENDENCIES =
rangexpr_LDFLAGS =
am_reduce_OBJECTS = reduce.$(OBJEXT)
reduce_OBJECTS = $(am_reduce_OBJECTS)
reduce_LDADD = $(LDADD)
reduce_DEPENDENCIES =
reduce_LDFLAGS =
am_simple_OBJECTS = simple.$(OBJEXT)
simple_OBJECTS = $(am_simple_OBJECTS)
simple_LDADD = $(LDADD)
simple_DEPENDENCIES =
simple_LDFLAGS =
am_slicing_OBJECTS = slicing.$(OBJEXT)
slicing_OBJECTS = $(am_slicing_OBJECTS)
slicing_LDADD = $(LDADD)
slicing_DEPENDENCIES =
slicing_LDFLAGS =
am_stencil_OBJECTS = stencil.$(OBJEXT)
stencil_OBJECTS = $(am_stencil_OBJECTS)
stencil_LDADD = $(LDADD)
stencil_DEPENDENCIES =
stencil_LDFLAGS =
am_stencil2_OBJECTS = stencil2.$(OBJEXT)
stencil2_OBJECTS = $(am_stencil2_OBJECTS)
stencil2_LDADD = $(LDADD)
stencil2_DEPENDENCIES =
stencil2_LDFLAGS =
am_stencil3_OBJECTS = stencil3.$(OBJEXT)
stencil3_OBJECTS = $(am_stencil3_OBJECTS)
stencil3_LDADD = $(LDADD)
stencil3_DEPENDENCIES =
stencil3_LDFLAGS =
am_stencilet_OBJECTS = stencilet.$(OBJEXT)
stencilet_OBJECTS = $(am_stencilet_OBJECTS)
stencilet_LDADD = $(LDADD)
stencilet_DEPENDENCIES =
stencilet_LDFLAGS =
am_storage_OBJECTS = storage.$(OBJEXT)
storage_OBJECTS = $(am_storage_OBJECTS)
storage_LDADD = $(LDADD)
storage_DEPENDENCIES =
storage_LDFLAGS =
am_tiny_OBJECTS = tiny.$(OBJEXT)
tiny_OBJECTS = $(am_tiny_OBJECTS)
tiny_LDADD = $(LDADD)
tiny_DEPENDENCIES =
tiny_LDFLAGS =
am_transform_OBJECTS = transform.$(OBJEXT)
transform_OBJECTS = $(am_transform_OBJECTS)
transform_LDADD = $(LDADD)
transform_DEPENDENCIES =
transform_LDFLAGS =
am_useret_OBJECTS = useret.$(OBJEXT)
useret_OBJECTS = $(am_useret_OBJECTS)
useret_LDADD = $(LDADD)
useret_DEPENDENCIES =
useret_LDFLAGS =
am_where_OBJECTS = where.$(OBJEXT)
where_OBJECTS = $(am_where_OBJECTS)
where_LDADD = $(LDADD)
where_DEPENDENCIES =
where_LDFLAGS =
am_whitt_OBJECTS = whitt.$(OBJEXT)
whitt_OBJECTS = $(am_whitt_OBJECTS)
whitt_LDADD = $(LDADD)
whitt_DEPENDENCIES =
whitt_LDFLAGS =

DEFS = @DEFS@
DEFAULT_INCLUDES =  -I. -I$(srcdir)
CPPFLAGS = @CPPFLAGS@
LIBS = @LIBS@
depcomp = $(SHELL) $(top_srcdir)/depcomp
am__depfiles_maybe = depfiles
@AMDEP_TRUE@DEP_FILES = ./$(DEPDIR)/array.Po ./$(DEPDIR)/cartesian.Po \
@AMDEP_TRUE@	./$(DEPDIR)/cast.Po ./$(DEPDIR)/cfd.Po \
@AMDEP_TRUE@	./$(DEPDIR)/complex-test.Po ./$(DEPDIR)/convolve.Po \
@AMDEP_TRUE@	./$(DEPDIR)/curldiv.Po ./$(DEPDIR)/deriv.Po \
@AMDEP_TRUE@	./$(DEPDIR)/diff.Po ./$(DEPDIR)/erf.Po \
@AMDEP_TRUE@	./$(DEPDIR)/fixed.Po ./$(DEPDIR)/indirect.Po \
@AMDEP_TRUE@	./$(DEPDIR)/io.Po ./$(DEPDIR)/iter.Po \
@AMDEP_TRUE@	./$(DEPDIR)/matmult.Po ./$(DEPDIR)/nested.Po \
@AMDEP_TRUE@	./$(DEPDIR)/numinquire.Po ./$(DEPDIR)/outer.Po \
@AMDEP_TRUE@	./$(DEPDIR)/pauli.Po ./$(DEPDIR)/pick.Po \
@AMDEP_TRUE@	./$(DEPDIR)/polymorph.Po ./$(DEPDIR)/prettyprint.Po \
@AMDEP_TRUE@	./$(DEPDIR)/qcd.Po ./$(DEPDIR)/rand2.Po \
@AMDEP_TRUE@	./$(DEPDIR)/random.Po ./$(DEPDIR)/rangexpr.Po \
@AMDEP_TRUE@	./$(DEPDIR)/reduce.Po ./$(DEPDIR)/simple.Po \
@AMDEP_TRUE@	./$(DEPDIR)/slicing.Po ./$(DEPDIR)/stencil.Po \
@AMDEP_TRUE@	./$(DEPDIR)/stencil2.Po ./$(DEPDIR)/stencil3.Po \
@AMDEP_TRUE@	./$(DEPDIR)/stencilet.Po ./$(DEPDIR)/storage.Po \
@AMDEP_TRUE@	./$(DEPDIR)/tiny.Po ./$(DEPDIR)/transform.Po \
@AMDEP_TRUE@	./$(DEPDIR)/useret.Po ./$(DEPDIR)/where.Po \
@AMDEP_TRUE@	./$(DEPDIR)/whitt.Po
CXXCOMPILE = $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS)
CXXLD = $(CXX)
CXXLINK = $(CXXLD) $(AM_CXXFLAGS) $(CXXFLAGS) $(AM_LDFLAGS) $(LDFLAGS) \
	-o $@
DIST_SOURCES = $(array_SOURCES) $(cartesian_SOURCES) $(cast_SOURCES) \
	$(cfd_SOURCES) $(complex_test_SOURCES) $(convolve_SOURCES) \
	$(curldiv_SOURCES) $(deriv_SOURCES) $(diff_SOURCES) \
	$(erf_SOURCES) $(fixed_SOURCES) $(indirect_SOURCES) \
	$(io_SOURCES) $(iter_SOURCES) $(matmult_SOURCES) \
	$(nested_SOURCES) $(numinquire_SOURCES) $(outer_SOURCES) \
	$(pauli_SOURCES) $(pick_SOURCES) $(polymorph_SOURCES) \
	$(prettyprint_SOURCES) $(qcd_SOURCES) $(rand2_SOURCES) \
	$(random_SOURCES) $(rangexpr_SOURCES) $(reduce_SOURCES) \
	$(simple_SOURCES) $(slicing_SOURCES) $(stencil_SOURCES) \
	$(stencil2_SOURCES) $(stencil3_SOURCES) $(stencilet_SOURCES) \
	$(storage_SOURCES) $(tiny_SOURCES) $(transform_SOURCES) \
	$(useret_SOURCES) $(where_SOURCES) $(whitt_SOURCES)
DATA = $(examples_DATA)

DIST_COMMON = Makefile.am Makefile.in
SOURCES = $(array_SOURCES) $(cartesian_SOURCES) $(cast_SOURCES) $(cfd_SOURCES) $(complex_test_SOURCES) $(convolve_SOURCES) $(curldiv_SOURCES) $(deriv_SOURCES) $(diff_SOURCES) $(erf_SOURCES) $(fixed_SOURCES) $(indirect_SOURCES) $(io_SOURCES) $(iter_SOURCES) $(matmult_SOURCES) $(nested_SOURCES) $(numinquire_SOURCES) $(outer_SOURCES) $(pauli_SOURCES) $(pick_SOURCES) $(polymorph_SOURCES) $(prettyprint_SOURCES) $(qcd_SOURCES) $(rand2_SOURCES) $(random_SOURCES) $(rangexpr_SOURCES) $(reduce_SOURCES) $(simple_SOURCES) $(slicing_SOURCES) $(stencil_SOURCES) $(stencil2_SOURCES) $(stencil3_SOURCES) $(stencilet_SOURCES) $(storage_SOURCES) $(tiny_SOURCES) $(transform_SOURCES) $(useret_SOURCES) $(where_SOURCES) $(whitt_SOURCES)

all: all-am

.SUFFIXES:
.SUFFIXES: .cpp .o .obj
$(srcdir)/Makefile.in: @MAINTAINER_MODE_TRUE@ Makefile.am  $(top_srcdir)/configure.in $(ACLOCAL_M4)
	cd $(top_srcdir) && \
	  $(AUTOMAKE) --gnu  examples/Makefile
Makefile: @MAINTAINER_MODE_TRUE@ $(srcdir)/Makefile.in  $(top_builddir)/config.status
	cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)
array$(EXEEXT): $(array_OBJECTS) $(array_DEPENDENCIES) 
	@rm -f array$(EXEEXT)
	$(CXXLINK) $(array_LDFLAGS) $(array_OBJECTS) $(array_LDADD) $(LIBS)
cartesian$(EXEEXT): $(cartesian_OBJECTS) $(cartesian_DEPENDENCIES) 
	@rm -f cartesian$(EXEEXT)
	$(CXXLINK) $(cartesian_LDFLAGS) $(cartesian_OBJECTS) $(cartesian_LDADD) $(LIBS)
cast$(EXEEXT): $(cast_OBJECTS) $(cast_DEPENDENCIES) 
	@rm -f cast$(EXEEXT)
	$(CXXLINK) $(cast_LDFLAGS) $(cast_OBJECTS) $(cast_LDADD) $(LIBS)
cfd$(EXEEXT): $(cfd_OBJECTS) $(cfd_DEPENDENCIES) 
	@rm -f cfd$(EXEEXT)
	$(CXXLINK) $(cfd_LDFLAGS) $(cfd_OBJECTS) $(cfd_LDADD) $(LIBS)
complex-test$(EXEEXT): $(complex_test_OBJECTS) $(complex_test_DEPENDENCIES) 
	@rm -f complex-test$(EXEEXT)
	$(CXXLINK) $(complex_test_LDFLAGS) $(complex_test_OBJECTS) $(complex_test_LDADD) $(LIBS)
convolve$(EXEEXT): $(convolve_OBJECTS) $(convolve_DEPENDENCIES) 
	@rm -f convolve$(EXEEXT)
	$(CXXLINK) $(convolve_LDFLAGS) $(convolve_OBJECTS) $(convolve_LDADD) $(LIBS)
curldiv$(EXEEXT): $(curldiv_OBJECTS) $(curldiv_DEPENDENCIES) 
	@rm -f curldiv$(EXEEXT)
	$(CXXLINK) $(curldiv_LDFLAGS) $(curldiv_OBJECTS) $(curldiv_LDADD) $(LIBS)
deriv$(EXEEXT): $(deriv_OBJECTS) $(deriv_DEPENDENCIES) 
	@rm -f deriv$(EXEEXT)
	$(CXXLINK) $(deriv_LDFLAGS) $(deriv_OBJECTS) $(deriv_LDADD) $(LIBS)
diff$(EXEEXT): $(diff_OBJECTS) $(diff_DEPENDENCIES) 
	@rm -f diff$(EXEEXT)
	$(CXXLINK) $(diff_LDFLAGS) $(diff_OBJECTS) $(diff_LDADD) $(LIBS)
erf$(EXEEXT): $(erf_OBJECTS) $(erf_DEPENDENCIES) 
	@rm -f erf$(EXEEXT)
	$(CXXLINK) $(erf_LDFLAGS) $(erf_OBJECTS) $(erf_LDADD) $(LIBS)
fixed$(EXEEXT): $(fixed_OBJECTS) $(fixed_DEPENDENCIES) 
	@rm -f fixed$(EXEEXT)
	$(CXXLINK) $(fixed_LDFLAGS) $(fixed_OBJECTS) $(fixed_LDADD) $(LIBS)
indirect$(EXEEXT): $(indirect_OBJECTS) $(indirect_DEPENDENCIES) 
	@rm -f indirect$(EXEEXT)
	$(CXXLINK) $(indirect_LDFLAGS) $(indirect_OBJECTS) $(indirect_LDADD) $(LIBS)
io$(EXEEXT): $(io_OBJECTS) $(io_DEPENDENCIES) 
	@rm -f io$(EXEEXT)
	$(CXXLINK) $(io_LDFLAGS) $(io_OBJECTS) $(io_LDADD) $(LIBS)
iter$(EXEEXT): $(iter_OBJECTS) $(iter_DEPENDENCIES) 
	@rm -f iter$(EXEEXT)
	$(CXXLINK) $(iter_LDFLAGS) $(iter_OBJECTS) $(iter_LDADD) $(LIBS)
matmult$(EXEEXT): $(matmult_OBJECTS) $(matmult_DEPENDENCIES) 
	@rm -f matmult$(EXEEXT)
	$(CXXLINK) $(matmult_LDFLAGS) $(matmult_OBJECTS) $(matmult_LDADD) $(LIBS)
nested$(EXEEXT): $(nested_OBJECTS) $(nested_DEPENDENCIES) 
	@rm -f nested$(EXEEXT)
	$(CXXLINK) $(nested_LDFLAGS) $(nested_OBJECTS) $(nested_LDADD) $(LIBS)
numinquire$(EXEEXT): $(numinquire_OBJECTS) $(numinquire_DEPENDENCIES) 
	@rm -f numinquire$(EXEEXT)
	$(CXXLINK) $(numinquire_LDFLAGS) $(numinquire_OBJECTS) $(numinquire_LDADD) $(LIBS)
outer$(EXEEXT): $(outer_OBJECTS) $(outer_DEPENDENCIES) 
	@rm -f outer$(EXEEXT)
	$(CXXLINK) $(outer_LDFLAGS) $(outer_OBJECTS) $(outer_LDADD) $(LIBS)
pauli$(EXEEXT): $(pauli_OBJECTS) $(pauli_DEPENDENCIES) 
	@rm -f pauli$(EXEEXT)
	$(CXXLINK) $(pauli_LDFLAGS) $(pauli_OBJECTS) $(pauli_LDADD) $(LIBS)
pick$(EXEEXT): $(pick_OBJECTS) $(pick_DEPENDENCIES) 
	@rm -f pick$(EXEEXT)
	$(CXXLINK) $(pick_LDFLAGS) $(pick_OBJECTS) $(pick_LDADD) $(LIBS)
polymorph$(EXEEXT): $(polymorph_OBJECTS) $(polymorph_DEPENDENCIES) 
	@rm -f polymorph$(EXEEXT)
	$(CXXLINK) $(polymorph_LDFLAGS) $(polymorph_OBJECTS) $(polymorph_LDADD) $(LIBS)
prettyprint$(EXEEXT): $(prettyprint_OBJECTS) $(prettyprint_DEPENDENCIES) 
	@rm -f prettyprint$(EXEEXT)
	$(CXXLINK) $(prettyprint_LDFLAGS) $(prettyprint_OBJECTS) $(prettyprint_LDADD) $(LIBS)
qcd$(EXEEXT): $(qcd_OBJECTS) $(qcd_DEPENDENCIES) 
	@rm -f qcd$(EXEEXT)
	$(CXXLINK) $(qcd_LDFLAGS) $(qcd_OBJECTS) $(qcd_LDADD) $(LIBS)
rand2$(EXEEXT): $(rand2_OBJECTS) $(rand2_DEPENDENCIES) 
	@rm -f rand2$(EXEEXT)
	$(CXXLINK) $(rand2_LDFLAGS) $(rand2_OBJECTS) $(rand2_LDADD) $(LIBS)
random$(EXEEXT): $(random_OBJECTS) $(random_DEPENDENCIES) 
	@rm -f random$(EXEEXT)
	$(CXXLINK) $(random_LDFLAGS) $(random_OBJECTS) $(random_LDADD) $(LIBS)
rangexpr$(EXEEXT): $(rangexpr_OBJECTS) $(rangexpr_DEPENDENCIES) 
	@rm -f rangexpr$(EXEEXT)
	$(CXXLINK) $(rangexpr_LDFLAGS) $(rangexpr_OBJECTS) $(rangexpr_LDADD) $(LIBS)
reduce$(EXEEXT): $(reduce_OBJECTS) $(reduce_DEPENDENCIES) 
	@rm -f reduce$(EXEEXT)
	$(CXXLINK) $(reduce_LDFLAGS) $(reduce_OBJECTS) $(reduce_LDADD) $(LIBS)
simple$(EXEEXT): $(simple_OBJECTS) $(simple_DEPENDENCIES) 
	@rm -f simple$(EXEEXT)
	$(CXXLINK) $(simple_LDFLAGS) $(simple_OBJECTS) $(simple_LDADD) $(LIBS)
slicing$(EXEEXT): $(slicing_OBJECTS) $(slicing_DEPENDENCIES) 
	@rm -f slicing$(EXEEXT)
	$(CXXLINK) $(slicing_LDFLAGS) $(slicing_OBJECTS) $(slicing_LDADD) $(LIBS)
stencil$(EXEEXT): $(stencil_OBJECTS) $(stencil_DEPENDENCIES) 
	@rm -f stencil$(EXEEXT)
	$(CXXLINK) $(stencil_LDFLAGS) $(stencil_OBJECTS) $(stencil_LDADD) $(LIBS)
stencil2$(EXEEXT): $(stencil2_OBJECTS) $(stencil2_DEPENDENCIES) 
	@rm -f stencil2$(EXEEXT)
	$(CXXLINK) $(stencil2_LDFLAGS) $(stencil2_OBJECTS) $(stencil2_LDADD) $(LIBS)
stencil3$(EXEEXT): $(stencil3_OBJECTS) $(stencil3_DEPENDENCIES) 
	@rm -f stencil3$(EXEEXT)
	$(CXXLINK) $(stencil3_LDFLAGS) $(stencil3_OBJECTS) $(stencil3_LDADD) $(LIBS)
stencilet$(EXEEXT): $(stencilet_OBJECTS) $(stencilet_DEPENDENCIES) 
	@rm -f stencilet$(EXEEXT)
	$(CXXLINK) $(stencilet_LDFLAGS) $(stencilet_OBJECTS) $(stencilet_LDADD) $(LIBS)
storage$(EXEEXT): $(storage_OBJECTS) $(storage_DEPENDENCIES) 
	@rm -f storage$(EXEEXT)
	$(CXXLINK) $(storage_LDFLAGS) $(storage_OBJECTS) $(storage_LDADD) $(LIBS)
tiny$(EXEEXT): $(tiny_OBJECTS) $(tiny_DEPENDENCIES) 
	@rm -f tiny$(EXEEXT)
	$(CXXLINK) $(tiny_LDFLAGS) $(tiny_OBJECTS) $(tiny_LDADD) $(LIBS)
transform$(EXEEXT): $(transform_OBJECTS) $(transform_DEPENDENCIES) 
	@rm -f transform$(EXEEXT)
	$(CXXLINK) $(transform_LDFLAGS) $(transform_OBJECTS) $(transform_LDADD) $(LIBS)
useret$(EXEEXT): $(useret_OBJECTS) $(useret_DEPENDENCIES) 
	@rm -f useret$(EXEEXT)
	$(CXXLINK) $(useret_LDFLAGS) $(useret_OBJECTS) $(useret_LDADD) $(LIBS)
where$(EXEEXT): $(where_OBJECTS) $(where_DEPENDENCIES) 
	@rm -f where$(EXEEXT)
	$(CXXLINK) $(where_LDFLAGS) $(where_OBJECTS) $(where_LDADD) $(LIBS)
whitt$(EXEEXT): $(whitt_OBJECTS) $(whitt_DEPENDENCIES) 
	@rm -f whitt$(EXEEXT)
	$(CXXLINK) $(whitt_LDFLAGS) $(whitt_OBJECTS) $(whitt_LDADD) $(LIBS)

mostlyclean-compile:
	-rm -f *.$(OBJEXT) core *.core

distclean-compile:
	-rm -f *.tab.c

@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/array.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/cartesian.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/cast.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/cfd.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/complex-test.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/convolve.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/curldiv.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/deriv.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/diff.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/erf.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/fixed.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/indirect.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/io.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/iter.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/matmult.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/nested.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/numinquire.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/outer.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/pauli.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/pick.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/polymorph.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/prettyprint.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/qcd.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/rand2.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/random.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/rangexpr.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/reduce.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/simple.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/slicing.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/stencil.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/stencil2.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/stencil3.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/stencilet.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/storage.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tiny.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/transform.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/useret.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/where.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/whitt.Po@am__quote@

distclean-depend:
	-rm -rf ./$(DEPDIR)

.cpp.o:
@AMDEP_TRUE@	source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/$*.Po' tmpdepfile='$(DEPDIR)/$*.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXXCOMPILE) -c -o $@ `test -f '$<' || echo '$(srcdir)/'`$<

.cpp.obj:
@AMDEP_TRUE@	source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/$*.Po' tmpdepfile='$(DEPDIR)/$*.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXXCOMPILE) -c -o $@ `cygpath -w $<`
CXXDEPMODE = @CXXDEPMODE@
uninstall-info-am:
examplesDATA_INSTALL = $(INSTALL_DATA)
install-examplesDATA: $(examples_DATA)
	@$(NORMAL_INSTALL)
	$(mkinstalldirs) $(DESTDIR)$(examplesdir)
	@list='$(examples_DATA)'; for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  f="`echo $$p | sed -e 's|^.*/||'`"; \
	  echo " $(examplesDATA_INSTALL) $$d$$p $(DESTDIR)$(examplesdir)/$$f"; \
	  $(examplesDATA_INSTALL) $$d$$p $(DESTDIR)$(examplesdir)/$$f; \
	done

uninstall-examplesDATA:
	@$(NORMAL_UNINSTALL)
	@list='$(examples_DATA)'; for p in $$list; do \
	  f="`echo $$p | sed -e 's|^.*/||'`"; \
	  echo " rm -f $(DESTDIR)$(examplesdir)/$$f"; \
	  rm -f $(DESTDIR)$(examplesdir)/$$f; \
	done

ETAGS = etags
ETAGSFLAGS =

tags: TAGS

ID: $(HEADERS) $(SOURCES) $(LISP) $(TAGS_FILES)
	list='$(SOURCES) $(HEADERS) $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	mkid -fID $$unique

TAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	tags=; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	test -z "$(ETAGS_ARGS)$$tags$$unique" \
	  || $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	     $$tags $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && cd $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) $$here

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)

top_distdir = ..
distdir = $(top_distdir)/$(PACKAGE)-$(VERSION)

distdir: $(DISTFILES)
	@list='$(DISTFILES)'; for file in $$list; do \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  dir=`echo "$$file" | sed -e 's,/[^/]*$$,,'`; \
	  if test "$$dir" != "$$file" && test "$$dir" != "."; then \
	    dir="/$$dir"; \
	    $(mkinstalldirs) "$(distdir)$$dir"; \
	  else \
	    dir=''; \
	  fi; \
	  if test -d $$d/$$file; then \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -pR $(srcdir)/$$file $(distdir)$$dir || exit 1; \
	    fi; \
	    cp -pR $$d/$$file $(distdir)$$dir || exit 1; \
	  else \
	    test -f $(distdir)/$$file \
	    || cp -p $$d/$$file $(distdir)/$$file \
	    || exit 1; \
	  fi; \
	done
check-am: all-am
check: check-am
all-am: Makefile $(DATA)

installdirs:
	$(mkinstalldirs) $(DESTDIR)$(examplesdir)

install: install-am
install-exec: install-exec-am
install-data: install-data-am
uninstall: uninstall-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-am
install-strip:
	$(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	  INSTALL_STRIP_FLAG=-s \
	  `test -z '$(STRIP)' || \
	    echo "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'"` install
mostlyclean-generic:

clean-generic:

distclean-generic:
	-rm -f Makefile $(CONFIG_CLEAN_FILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
clean: clean-am

clean-am: clean-generic clean-local mostlyclean-am

distclean: distclean-am

distclean-am: clean-am distclean-compile distclean-depend \
	distclean-generic distclean-tags

dvi: dvi-am

dvi-am:

info: info-am

info-am:

install-data-am: install-examplesDATA

install-exec-am:

install-info: install-info-am

install-man:

installcheck-am:

maintainer-clean: maintainer-clean-am

maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-am

mostlyclean-am: mostlyclean-compile mostlyclean-generic

uninstall-am: uninstall-examplesDATA uninstall-info-am

.PHONY: GTAGS all all-am check check-am clean clean-generic clean-local \
	distclean distclean-compile distclean-depend distclean-generic \
	distclean-tags distdir dvi dvi-am info info-am install \
	install-am install-data install-data-am install-examplesDATA \
	install-exec install-exec-am install-info install-info-am \
	install-man install-strip installcheck installcheck-am \
	installdirs maintainer-clean maintainer-clean-generic \
	mostlyclean mostlyclean-compile mostlyclean-generic tags \
	uninstall uninstall-am uninstall-examplesDATA uninstall-info-am


#compile: $(EXTRA_PROGRAMS)

check-examples: $(EXTRA_PROGRAMS)
	@echo Running examples...
	@for prog in $(EXTRA_PROGRAMS) ; do \
		echo $$prog && (./$$prog > /dev/null 2>&1) || exit 1; \
	done
	@echo All tests passed.

#all:

clean-local:
	-rm -rf cxx_repository $(EXTRA_PROGRAMS)
# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
